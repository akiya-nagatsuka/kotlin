diff --git a/core/build.gradle.kts b/core/build.gradle.kts
index d30d26c..8f9442c 100644
--- a/core/build.gradle.kts
+++ b/core/build.gradle.kts
@@ -1,6 +1,5 @@
 plugins {
     kotlin("multiplatform")
-    `java-library`
 }
 
 kotlin {
diff --git a/core/src/nativeMain/kotlin/org/jetbrains/litmuskt/RepoUtils.kt b/core/src/nativeMain/kotlin/org/jetbrains/litmuskt/RepoUtils.kt
new file mode 100644
index 0000000..2b2609e
--- /dev/null
+++ b/core/src/nativeMain/kotlin/org/jetbrains/litmuskt/RepoUtils.kt
@@ -0,0 +1,22 @@
+package org.jetbrains.litmuskt
+
+import org.jetbrains.litmuskt.barriers.*
+import kotlin.time.Duration.Companion.seconds
+
+fun runTestWithSampleParams(test: LitmusTest<*>): LitmusResult {
+    val runner = WorkerRunner()
+    // Later there should be more variations for less frequent but longer test runs
+    val paramsList: List<LitmusRunParams> = variateRunParams(
+        batchSizeSchedule = listOf(1_000_000),
+        affinityMapSchedule = listOf(null),
+        syncPeriodSchedule = listOf(10, 100),
+        barrierSchedule = listOf(::CinteropSpinBarrier)
+    ).toList()
+
+    val result = paramsList.map { params ->
+        runner.runSingleTestParallel(test, params, timeLimit = 1.seconds, instances = 3)
+    }.mergeResults()
+    return result
+}
+
+fun LitmusResult.hasForbidden() = any { it.type == LitmusOutcomeType.FORBIDDEN }
diff --git a/testsuite/build.gradle.kts b/testsuite/build.gradle.kts
index 88f8ddc..17df2fb 100644
--- a/testsuite/build.gradle.kts
+++ b/testsuite/build.gradle.kts
@@ -1,7 +1,5 @@
 plugins {
     kotlin("multiplatform")
-    id("com.google.devtools.ksp") version "2.0.0-1.0.23"
-    `java-library`
 }
 
 kotlin {
@@ -18,18 +16,8 @@ kotlin {
     sourceSets {
         commonMain {
             dependencies {
-                implementation(project(":core"))
+                implementation(project(":litmuskt:core"))
             }
         }
     }
 }
-
-// ======== ksp ========
-
-val kspTasks = setOf("kspJvm", "kspLinuxX64", "kspMacosX64", "kspMacosArm64", "kspMingwX64")
-
-dependencies {
-    for (kspTask in kspTasks) {
-        add(kspTask, project(":codegen"))
-    }
-}
