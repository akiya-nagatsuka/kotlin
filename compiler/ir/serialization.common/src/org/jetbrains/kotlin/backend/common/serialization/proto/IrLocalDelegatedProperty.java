// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: compiler/ir/serialization.common/src/KotlinIr.debug.proto

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty}
 */
public final class IrLocalDelegatedProperty extends
    org.jetbrains.kotlin.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty)
    IrLocalDelegatedPropertyOrBuilder {
  // Use IrLocalDelegatedProperty.newBuilder() to construct.
  private IrLocalDelegatedProperty(org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private IrLocalDelegatedProperty(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final IrLocalDelegatedProperty defaultInstance;
  public static IrLocalDelegatedProperty getDefaultInstance() {
    return defaultInstance;
  }

  public IrLocalDelegatedProperty getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final org.jetbrains.kotlin.protobuf.UnknownFieldSet unknownFields;
  @Override
  public final org.jetbrains.kotlin.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private IrLocalDelegatedProperty(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    org.jetbrains.kotlin.protobuf.UnknownFieldSet.Builder unknownFields =
        org.jetbrains.kotlin.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            IrDeclarationBase.Builder subBuilder = null;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              subBuilder = base_.toBuilder();
            }
            base_ = input.readMessage(IrDeclarationBase.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(base_);
              base_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000001;
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            nameType_ = input.readInt64();
            break;
          }
          case 26: {
            IrVariable.Builder subBuilder = null;
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              subBuilder = delegate_.toBuilder();
            }
            delegate_ = input.readMessage(IrVariable.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(delegate_);
              delegate_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000004;
            break;
          }
          case 34: {
            IrFunction.Builder subBuilder = null;
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              subBuilder = getter_.toBuilder();
            }
            getter_ = input.readMessage(IrFunction.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(getter_);
              getter_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000008;
            break;
          }
          case 42: {
            IrFunction.Builder subBuilder = null;
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              subBuilder = setter_.toBuilder();
            }
            setter_ = input.readMessage(IrFunction.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(setter_);
              setter_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000010;
            break;
          }
        }
      }
    } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrLocalDelegatedProperty_descriptor;
  }

  protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrLocalDelegatedProperty_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            IrLocalDelegatedProperty.class, Builder.class);
  }

  public static org.jetbrains.kotlin.protobuf.Parser<IrLocalDelegatedProperty> PARSER =
      new org.jetbrains.kotlin.protobuf.AbstractParser<IrLocalDelegatedProperty>() {
    public IrLocalDelegatedProperty parsePartialFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return new IrLocalDelegatedProperty(input, extensionRegistry);
    }
  };

  @Override
  public org.jetbrains.kotlin.protobuf.Parser<IrLocalDelegatedProperty> getParserForType() {
    return PARSER;
  }

  private int bitField0_;
  public static final int BASE_FIELD_NUMBER = 1;
  private IrDeclarationBase base_;
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
   */
  public boolean hasBase() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
   */
  public IrDeclarationBase getBase() {
    return base_;
  }
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
   */
  public IrDeclarationBaseOrBuilder getBaseOrBuilder() {
    return base_;
  }

  public static final int NAME_TYPE_FIELD_NUMBER = 2;
  private long nameType_;
  /**
   * <code>required int64 name_type = 2;</code>
   */
  public boolean hasNameType() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>required int64 name_type = 2;</code>
   */
  public long getNameType() {
    return nameType_;
  }

  public static final int DELEGATE_FIELD_NUMBER = 3;
  private IrVariable delegate_;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable delegate = 3;</code>
   */
  public boolean hasDelegate() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable delegate = 3;</code>
   */
  public IrVariable getDelegate() {
    return delegate_;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable delegate = 3;</code>
   */
  public IrVariableOrBuilder getDelegateOrBuilder() {
    return delegate_;
  }

  public static final int GETTER_FIELD_NUMBER = 4;
  private IrFunction getter_;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 4;</code>
   */
  public boolean hasGetter() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 4;</code>
   */
  public IrFunction getGetter() {
    return getter_;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 4;</code>
   */
  public IrFunctionOrBuilder getGetterOrBuilder() {
    return getter_;
  }

  public static final int SETTER_FIELD_NUMBER = 5;
  private IrFunction setter_;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 5;</code>
   */
  public boolean hasSetter() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 5;</code>
   */
  public IrFunction getSetter() {
    return setter_;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 5;</code>
   */
  public IrFunctionOrBuilder getSetterOrBuilder() {
    return setter_;
  }

  private void initFields() {
    base_ = IrDeclarationBase.getDefaultInstance();
    nameType_ = 0L;
    delegate_ = IrVariable.getDefaultInstance();
    getter_ = IrFunction.getDefaultInstance();
    setter_ = IrFunction.getDefaultInstance();
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasBase()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasNameType()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!getBase().isInitialized()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (hasDelegate()) {
      if (!getDelegate().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasGetter()) {
      if (!getGetter().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasSetter()) {
      if (!getSetter().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeMessage(1, base_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt64(2, nameType_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeMessage(3, delegate_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeMessage(4, getter_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeMessage(5, setter_);
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(1, base_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt64Size(2, nameType_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(3, delegate_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(4, getter_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(5, setter_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @Override
  protected Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static IrLocalDelegatedProperty parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static IrLocalDelegatedProperty parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static IrLocalDelegatedProperty parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static IrLocalDelegatedProperty parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static IrLocalDelegatedProperty parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static IrLocalDelegatedProperty parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static IrLocalDelegatedProperty parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static IrLocalDelegatedProperty parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static IrLocalDelegatedProperty parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static IrLocalDelegatedProperty parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(IrLocalDelegatedProperty prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @Override
  protected Builder newBuilderForType(
      org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty)
      IrLocalDelegatedPropertyOrBuilder {
    public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrLocalDelegatedProperty_descriptor;
    }

    protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrLocalDelegatedProperty_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              IrLocalDelegatedProperty.class, Builder.class);
    }

    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getBaseFieldBuilder();
        getDelegateFieldBuilder();
        getGetterFieldBuilder();
        getSetterFieldBuilder();
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      if (baseBuilder_ == null) {
        base_ = IrDeclarationBase.getDefaultInstance();
      } else {
        baseBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      nameType_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      if (delegateBuilder_ == null) {
        delegate_ = IrVariable.getDefaultInstance();
      } else {
        delegateBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (getterBuilder_ == null) {
        getter_ = IrFunction.getDefaultInstance();
      } else {
        getterBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      if (setterBuilder_ == null) {
        setter_ = IrFunction.getDefaultInstance();
      } else {
        setterBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrLocalDelegatedProperty_descriptor;
    }

    public IrLocalDelegatedProperty getDefaultInstanceForType() {
      return IrLocalDelegatedProperty.getDefaultInstance();
    }

    public IrLocalDelegatedProperty build() {
      IrLocalDelegatedProperty result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public IrLocalDelegatedProperty buildPartial() {
      IrLocalDelegatedProperty result = new IrLocalDelegatedProperty(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      if (baseBuilder_ == null) {
        result.base_ = base_;
      } else {
        result.base_ = baseBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.nameType_ = nameType_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      if (delegateBuilder_ == null) {
        result.delegate_ = delegate_;
      } else {
        result.delegate_ = delegateBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      if (getterBuilder_ == null) {
        result.getter_ = getter_;
      } else {
        result.getter_ = getterBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      if (setterBuilder_ == null) {
        result.setter_ = setter_;
      } else {
        result.setter_ = setterBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(org.jetbrains.kotlin.protobuf.Message other) {
      if (other instanceof IrLocalDelegatedProperty) {
        return mergeFrom((IrLocalDelegatedProperty)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(IrLocalDelegatedProperty other) {
      if (other == IrLocalDelegatedProperty.getDefaultInstance()) return this;
      if (other.hasBase()) {
        mergeBase(other.getBase());
      }
      if (other.hasNameType()) {
        setNameType(other.getNameType());
      }
      if (other.hasDelegate()) {
        mergeDelegate(other.getDelegate());
      }
      if (other.hasGetter()) {
        mergeGetter(other.getGetter());
      }
      if (other.hasSetter()) {
        mergeSetter(other.getSetter());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      if (!hasBase()) {
        
        return false;
      }
      if (!hasNameType()) {
        
        return false;
      }
      if (!getBase().isInitialized()) {
        
        return false;
      }
      if (hasDelegate()) {
        if (!getDelegate().isInitialized()) {
          
          return false;
        }
      }
      if (hasGetter()) {
        if (!getGetter().isInitialized()) {
          
          return false;
        }
      }
      if (hasSetter()) {
        if (!getSetter().isInitialized()) {
          
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      IrLocalDelegatedProperty parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (IrLocalDelegatedProperty) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private IrDeclarationBase base_ = IrDeclarationBase.getDefaultInstance();
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrDeclarationBase, IrDeclarationBase.Builder, IrDeclarationBaseOrBuilder> baseBuilder_;
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public boolean hasBase() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public IrDeclarationBase getBase() {
      if (baseBuilder_ == null) {
        return base_;
      } else {
        return baseBuilder_.getMessage();
      }
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public Builder setBase(IrDeclarationBase value) {
      if (baseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        base_ = value;
        onChanged();
      } else {
        baseBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public Builder setBase(
        IrDeclarationBase.Builder builderForValue) {
      if (baseBuilder_ == null) {
        base_ = builderForValue.build();
        onChanged();
      } else {
        baseBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public Builder mergeBase(IrDeclarationBase value) {
      if (baseBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            base_ != IrDeclarationBase.getDefaultInstance()) {
          base_ =
            IrDeclarationBase.newBuilder(base_).mergeFrom(value).buildPartial();
        } else {
          base_ = value;
        }
        onChanged();
      } else {
        baseBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public Builder clearBase() {
      if (baseBuilder_ == null) {
        base_ = IrDeclarationBase.getDefaultInstance();
        onChanged();
      } else {
        baseBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public IrDeclarationBase.Builder getBaseBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getBaseFieldBuilder().getBuilder();
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public IrDeclarationBaseOrBuilder getBaseOrBuilder() {
      if (baseBuilder_ != null) {
        return baseBuilder_.getMessageOrBuilder();
      } else {
        return base_;
      }
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrDeclarationBase, IrDeclarationBase.Builder, IrDeclarationBaseOrBuilder>
        getBaseFieldBuilder() {
      if (baseBuilder_ == null) {
        baseBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrDeclarationBase, IrDeclarationBase.Builder, IrDeclarationBaseOrBuilder>(
                getBase(),
                getParentForChildren(),
                isClean());
        base_ = null;
      }
      return baseBuilder_;
    }

    private long nameType_ ;
    /**
     * <code>required int64 name_type = 2;</code>
     */
    public boolean hasNameType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 name_type = 2;</code>
     */
    public long getNameType() {
      return nameType_;
    }
    /**
     * <code>required int64 name_type = 2;</code>
     */
    public Builder setNameType(long value) {
      bitField0_ |= 0x00000002;
      nameType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int64 name_type = 2;</code>
     */
    public Builder clearNameType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      nameType_ = 0L;
      onChanged();
      return this;
    }

    private IrVariable delegate_ = IrVariable.getDefaultInstance();
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrVariable, IrVariable.Builder, IrVariableOrBuilder> delegateBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable delegate = 3;</code>
     */
    public boolean hasDelegate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable delegate = 3;</code>
     */
    public IrVariable getDelegate() {
      if (delegateBuilder_ == null) {
        return delegate_;
      } else {
        return delegateBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable delegate = 3;</code>
     */
    public Builder setDelegate(IrVariable value) {
      if (delegateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        delegate_ = value;
        onChanged();
      } else {
        delegateBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable delegate = 3;</code>
     */
    public Builder setDelegate(
        IrVariable.Builder builderForValue) {
      if (delegateBuilder_ == null) {
        delegate_ = builderForValue.build();
        onChanged();
      } else {
        delegateBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable delegate = 3;</code>
     */
    public Builder mergeDelegate(IrVariable value) {
      if (delegateBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            delegate_ != IrVariable.getDefaultInstance()) {
          delegate_ =
            IrVariable.newBuilder(delegate_).mergeFrom(value).buildPartial();
        } else {
          delegate_ = value;
        }
        onChanged();
      } else {
        delegateBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable delegate = 3;</code>
     */
    public Builder clearDelegate() {
      if (delegateBuilder_ == null) {
        delegate_ = IrVariable.getDefaultInstance();
        onChanged();
      } else {
        delegateBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable delegate = 3;</code>
     */
    public IrVariable.Builder getDelegateBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getDelegateFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable delegate = 3;</code>
     */
    public IrVariableOrBuilder getDelegateOrBuilder() {
      if (delegateBuilder_ != null) {
        return delegateBuilder_.getMessageOrBuilder();
      } else {
        return delegate_;
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable delegate = 3;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrVariable, IrVariable.Builder, IrVariableOrBuilder>
        getDelegateFieldBuilder() {
      if (delegateBuilder_ == null) {
        delegateBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrVariable, IrVariable.Builder, IrVariableOrBuilder>(
                getDelegate(),
                getParentForChildren(),
                isClean());
        delegate_ = null;
      }
      return delegateBuilder_;
    }

    private IrFunction getter_ = IrFunction.getDefaultInstance();
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrFunction, IrFunction.Builder, IrFunctionOrBuilder> getterBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 4;</code>
     */
    public boolean hasGetter() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 4;</code>
     */
    public IrFunction getGetter() {
      if (getterBuilder_ == null) {
        return getter_;
      } else {
        return getterBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 4;</code>
     */
    public Builder setGetter(IrFunction value) {
      if (getterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        getter_ = value;
        onChanged();
      } else {
        getterBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 4;</code>
     */
    public Builder setGetter(
        IrFunction.Builder builderForValue) {
      if (getterBuilder_ == null) {
        getter_ = builderForValue.build();
        onChanged();
      } else {
        getterBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 4;</code>
     */
    public Builder mergeGetter(IrFunction value) {
      if (getterBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            getter_ != IrFunction.getDefaultInstance()) {
          getter_ =
            IrFunction.newBuilder(getter_).mergeFrom(value).buildPartial();
        } else {
          getter_ = value;
        }
        onChanged();
      } else {
        getterBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 4;</code>
     */
    public Builder clearGetter() {
      if (getterBuilder_ == null) {
        getter_ = IrFunction.getDefaultInstance();
        onChanged();
      } else {
        getterBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 4;</code>
     */
    public IrFunction.Builder getGetterBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getGetterFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 4;</code>
     */
    public IrFunctionOrBuilder getGetterOrBuilder() {
      if (getterBuilder_ != null) {
        return getterBuilder_.getMessageOrBuilder();
      } else {
        return getter_;
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 4;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrFunction, IrFunction.Builder, IrFunctionOrBuilder>
        getGetterFieldBuilder() {
      if (getterBuilder_ == null) {
        getterBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrFunction, IrFunction.Builder, IrFunctionOrBuilder>(
                getGetter(),
                getParentForChildren(),
                isClean());
        getter_ = null;
      }
      return getterBuilder_;
    }

    private IrFunction setter_ = IrFunction.getDefaultInstance();
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrFunction, IrFunction.Builder, IrFunctionOrBuilder> setterBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 5;</code>
     */
    public boolean hasSetter() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 5;</code>
     */
    public IrFunction getSetter() {
      if (setterBuilder_ == null) {
        return setter_;
      } else {
        return setterBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 5;</code>
     */
    public Builder setSetter(IrFunction value) {
      if (setterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        setter_ = value;
        onChanged();
      } else {
        setterBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 5;</code>
     */
    public Builder setSetter(
        IrFunction.Builder builderForValue) {
      if (setterBuilder_ == null) {
        setter_ = builderForValue.build();
        onChanged();
      } else {
        setterBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 5;</code>
     */
    public Builder mergeSetter(IrFunction value) {
      if (setterBuilder_ == null) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            setter_ != IrFunction.getDefaultInstance()) {
          setter_ =
            IrFunction.newBuilder(setter_).mergeFrom(value).buildPartial();
        } else {
          setter_ = value;
        }
        onChanged();
      } else {
        setterBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 5;</code>
     */
    public Builder clearSetter() {
      if (setterBuilder_ == null) {
        setter_ = IrFunction.getDefaultInstance();
        onChanged();
      } else {
        setterBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 5;</code>
     */
    public IrFunction.Builder getSetterBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getSetterFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 5;</code>
     */
    public IrFunctionOrBuilder getSetterOrBuilder() {
      if (setterBuilder_ != null) {
        return setterBuilder_.getMessageOrBuilder();
      } else {
        return setter_;
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 5;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrFunction, IrFunction.Builder, IrFunctionOrBuilder>
        getSetterFieldBuilder() {
      if (setterBuilder_ == null) {
        setterBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrFunction, IrFunction.Builder, IrFunctionOrBuilder>(
                getSetter(),
                getParentForChildren(),
                isClean());
        setter_ = null;
      }
      return setterBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty)
  }

  static {
    defaultInstance = new IrLocalDelegatedProperty(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty)
}
