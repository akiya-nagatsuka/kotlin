// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: compiler/ir/serialization.common/src/KotlinIr.debug.proto

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration}
 */
public final class IrDeclaration extends
    org.jetbrains.kotlin.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration)
    IrDeclarationOrBuilder {
  // Use IrDeclaration.newBuilder() to construct.
  private IrDeclaration(org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private IrDeclaration(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final IrDeclaration defaultInstance;
  public static IrDeclaration getDefaultInstance() {
    return defaultInstance;
  }

  public IrDeclaration getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final org.jetbrains.kotlin.protobuf.UnknownFieldSet unknownFields;
  @Override
  public final org.jetbrains.kotlin.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private IrDeclaration(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    org.jetbrains.kotlin.protobuf.UnknownFieldSet.Builder unknownFields =
        org.jetbrains.kotlin.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            IrAnonymousInit.Builder subBuilder = null;
            if (declaratorCase_ == 1) {
              subBuilder = ((IrAnonymousInit) declarator_).toBuilder();
            }
            declarator_ = input.readMessage(IrAnonymousInit.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((IrAnonymousInit) declarator_);
              declarator_ = subBuilder.buildPartial();
            }
            declaratorCase_ = 1;
            break;
          }
          case 18: {
            IrClass.Builder subBuilder = null;
            if (declaratorCase_ == 2) {
              subBuilder = ((IrClass) declarator_).toBuilder();
            }
            declarator_ = input.readMessage(IrClass.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((IrClass) declarator_);
              declarator_ = subBuilder.buildPartial();
            }
            declaratorCase_ = 2;
            break;
          }
          case 26: {
            IrConstructor.Builder subBuilder = null;
            if (declaratorCase_ == 3) {
              subBuilder = ((IrConstructor) declarator_).toBuilder();
            }
            declarator_ = input.readMessage(IrConstructor.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((IrConstructor) declarator_);
              declarator_ = subBuilder.buildPartial();
            }
            declaratorCase_ = 3;
            break;
          }
          case 34: {
            IrEnumEntry.Builder subBuilder = null;
            if (declaratorCase_ == 4) {
              subBuilder = ((IrEnumEntry) declarator_).toBuilder();
            }
            declarator_ = input.readMessage(IrEnumEntry.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((IrEnumEntry) declarator_);
              declarator_ = subBuilder.buildPartial();
            }
            declaratorCase_ = 4;
            break;
          }
          case 42: {
            IrField.Builder subBuilder = null;
            if (declaratorCase_ == 5) {
              subBuilder = ((IrField) declarator_).toBuilder();
            }
            declarator_ = input.readMessage(IrField.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((IrField) declarator_);
              declarator_ = subBuilder.buildPartial();
            }
            declaratorCase_ = 5;
            break;
          }
          case 50: {
            IrFunction.Builder subBuilder = null;
            if (declaratorCase_ == 6) {
              subBuilder = ((IrFunction) declarator_).toBuilder();
            }
            declarator_ = input.readMessage(IrFunction.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((IrFunction) declarator_);
              declarator_ = subBuilder.buildPartial();
            }
            declaratorCase_ = 6;
            break;
          }
          case 58: {
            IrProperty.Builder subBuilder = null;
            if (declaratorCase_ == 7) {
              subBuilder = ((IrProperty) declarator_).toBuilder();
            }
            declarator_ = input.readMessage(IrProperty.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((IrProperty) declarator_);
              declarator_ = subBuilder.buildPartial();
            }
            declaratorCase_ = 7;
            break;
          }
          case 66: {
            IrTypeParameter.Builder subBuilder = null;
            if (declaratorCase_ == 8) {
              subBuilder = ((IrTypeParameter) declarator_).toBuilder();
            }
            declarator_ = input.readMessage(IrTypeParameter.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((IrTypeParameter) declarator_);
              declarator_ = subBuilder.buildPartial();
            }
            declaratorCase_ = 8;
            break;
          }
          case 74: {
            IrVariable.Builder subBuilder = null;
            if (declaratorCase_ == 9) {
              subBuilder = ((IrVariable) declarator_).toBuilder();
            }
            declarator_ = input.readMessage(IrVariable.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((IrVariable) declarator_);
              declarator_ = subBuilder.buildPartial();
            }
            declaratorCase_ = 9;
            break;
          }
          case 82: {
            IrValueParameter.Builder subBuilder = null;
            if (declaratorCase_ == 10) {
              subBuilder = ((IrValueParameter) declarator_).toBuilder();
            }
            declarator_ = input.readMessage(IrValueParameter.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((IrValueParameter) declarator_);
              declarator_ = subBuilder.buildPartial();
            }
            declaratorCase_ = 10;
            break;
          }
          case 90: {
            IrLocalDelegatedProperty.Builder subBuilder = null;
            if (declaratorCase_ == 11) {
              subBuilder = ((IrLocalDelegatedProperty) declarator_).toBuilder();
            }
            declarator_ = input.readMessage(IrLocalDelegatedProperty.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((IrLocalDelegatedProperty) declarator_);
              declarator_ = subBuilder.buildPartial();
            }
            declaratorCase_ = 11;
            break;
          }
          case 98: {
            IrTypeAlias.Builder subBuilder = null;
            if (declaratorCase_ == 12) {
              subBuilder = ((IrTypeAlias) declarator_).toBuilder();
            }
            declarator_ = input.readMessage(IrTypeAlias.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((IrTypeAlias) declarator_);
              declarator_ = subBuilder.buildPartial();
            }
            declaratorCase_ = 12;
            break;
          }
          case 106: {
            IrErrorDeclaration.Builder subBuilder = null;
            if (declaratorCase_ == 13) {
              subBuilder = ((IrErrorDeclaration) declarator_).toBuilder();
            }
            declarator_ = input.readMessage(IrErrorDeclaration.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((IrErrorDeclaration) declarator_);
              declarator_ = subBuilder.buildPartial();
            }
            declaratorCase_ = 13;
            break;
          }
        }
      }
    } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrDeclaration_descriptor;
  }

  protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrDeclaration_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            IrDeclaration.class, Builder.class);
  }

  public static org.jetbrains.kotlin.protobuf.Parser<IrDeclaration> PARSER =
      new org.jetbrains.kotlin.protobuf.AbstractParser<IrDeclaration>() {
    public IrDeclaration parsePartialFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return new IrDeclaration(input, extensionRegistry);
    }
  };

  @Override
  public org.jetbrains.kotlin.protobuf.Parser<IrDeclaration> getParserForType() {
    return PARSER;
  }

  private int bitField0_;
  private int declaratorCase_ = 0;
  private Object declarator_;
  public enum DeclaratorCase
      implements org.jetbrains.kotlin.protobuf.Internal.EnumLite {
    IR_ANONYMOUS_INIT(1),
    IR_CLASS(2),
    IR_CONSTRUCTOR(3),
    IR_ENUM_ENTRY(4),
    IR_FIELD(5),
    IR_FUNCTION(6),
    IR_PROPERTY(7),
    IR_TYPE_PARAMETER(8),
    IR_VARIABLE(9),
    IR_VALUE_PARAMETER(10),
    IR_LOCAL_DELEGATED_PROPERTY(11),
    IR_TYPE_ALIAS(12),
    IR_ERROR_DECLARATION(13),
    DECLARATOR_NOT_SET(0);
    private int value = 0;
    private DeclaratorCase(int value) {
      this.value = value;
    }
    public static DeclaratorCase valueOf(int value) {
      switch (value) {
        case 1: return IR_ANONYMOUS_INIT;
        case 2: return IR_CLASS;
        case 3: return IR_CONSTRUCTOR;
        case 4: return IR_ENUM_ENTRY;
        case 5: return IR_FIELD;
        case 6: return IR_FUNCTION;
        case 7: return IR_PROPERTY;
        case 8: return IR_TYPE_PARAMETER;
        case 9: return IR_VARIABLE;
        case 10: return IR_VALUE_PARAMETER;
        case 11: return IR_LOCAL_DELEGATED_PROPERTY;
        case 12: return IR_TYPE_ALIAS;
        case 13: return IR_ERROR_DECLARATION;
        case 0: return DECLARATOR_NOT_SET;
        default: throw new IllegalArgumentException(
          "Value is undefined for this oneof enum.");
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public DeclaratorCase
  getDeclaratorCase() {
    return DeclaratorCase.valueOf(
        declaratorCase_);
  }

  public static final int IR_ANONYMOUS_INIT_FIELD_NUMBER = 1;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
   */
  public boolean hasIrAnonymousInit() {
    return declaratorCase_ == 1;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
   */
  public IrAnonymousInit getIrAnonymousInit() {
    if (declaratorCase_ == 1) {
       return (IrAnonymousInit) declarator_;
    }
    return IrAnonymousInit.getDefaultInstance();
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
   */
  public IrAnonymousInitOrBuilder getIrAnonymousInitOrBuilder() {
    if (declaratorCase_ == 1) {
       return (IrAnonymousInit) declarator_;
    }
    return IrAnonymousInit.getDefaultInstance();
  }

  public static final int IR_CLASS_FIELD_NUMBER = 2;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
   */
  public boolean hasIrClass() {
    return declaratorCase_ == 2;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
   */
  public IrClass getIrClass() {
    if (declaratorCase_ == 2) {
       return (IrClass) declarator_;
    }
    return IrClass.getDefaultInstance();
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
   */
  public IrClassOrBuilder getIrClassOrBuilder() {
    if (declaratorCase_ == 2) {
       return (IrClass) declarator_;
    }
    return IrClass.getDefaultInstance();
  }

  public static final int IR_CONSTRUCTOR_FIELD_NUMBER = 3;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
   */
  public boolean hasIrConstructor() {
    return declaratorCase_ == 3;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
   */
  public IrConstructor getIrConstructor() {
    if (declaratorCase_ == 3) {
       return (IrConstructor) declarator_;
    }
    return IrConstructor.getDefaultInstance();
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
   */
  public IrConstructorOrBuilder getIrConstructorOrBuilder() {
    if (declaratorCase_ == 3) {
       return (IrConstructor) declarator_;
    }
    return IrConstructor.getDefaultInstance();
  }

  public static final int IR_ENUM_ENTRY_FIELD_NUMBER = 4;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
   */
  public boolean hasIrEnumEntry() {
    return declaratorCase_ == 4;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
   */
  public IrEnumEntry getIrEnumEntry() {
    if (declaratorCase_ == 4) {
       return (IrEnumEntry) declarator_;
    }
    return IrEnumEntry.getDefaultInstance();
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
   */
  public IrEnumEntryOrBuilder getIrEnumEntryOrBuilder() {
    if (declaratorCase_ == 4) {
       return (IrEnumEntry) declarator_;
    }
    return IrEnumEntry.getDefaultInstance();
  }

  public static final int IR_FIELD_FIELD_NUMBER = 5;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
   */
  public boolean hasIrField() {
    return declaratorCase_ == 5;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
   */
  public IrField getIrField() {
    if (declaratorCase_ == 5) {
       return (IrField) declarator_;
    }
    return IrField.getDefaultInstance();
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
   */
  public IrFieldOrBuilder getIrFieldOrBuilder() {
    if (declaratorCase_ == 5) {
       return (IrField) declarator_;
    }
    return IrField.getDefaultInstance();
  }

  public static final int IR_FUNCTION_FIELD_NUMBER = 6;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
   */
  public boolean hasIrFunction() {
    return declaratorCase_ == 6;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
   */
  public IrFunction getIrFunction() {
    if (declaratorCase_ == 6) {
       return (IrFunction) declarator_;
    }
    return IrFunction.getDefaultInstance();
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
   */
  public IrFunctionOrBuilder getIrFunctionOrBuilder() {
    if (declaratorCase_ == 6) {
       return (IrFunction) declarator_;
    }
    return IrFunction.getDefaultInstance();
  }

  public static final int IR_PROPERTY_FIELD_NUMBER = 7;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
   */
  public boolean hasIrProperty() {
    return declaratorCase_ == 7;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
   */
  public IrProperty getIrProperty() {
    if (declaratorCase_ == 7) {
       return (IrProperty) declarator_;
    }
    return IrProperty.getDefaultInstance();
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
   */
  public IrPropertyOrBuilder getIrPropertyOrBuilder() {
    if (declaratorCase_ == 7) {
       return (IrProperty) declarator_;
    }
    return IrProperty.getDefaultInstance();
  }

  public static final int IR_TYPE_PARAMETER_FIELD_NUMBER = 8;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
   */
  public boolean hasIrTypeParameter() {
    return declaratorCase_ == 8;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
   */
  public IrTypeParameter getIrTypeParameter() {
    if (declaratorCase_ == 8) {
       return (IrTypeParameter) declarator_;
    }
    return IrTypeParameter.getDefaultInstance();
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
   */
  public IrTypeParameterOrBuilder getIrTypeParameterOrBuilder() {
    if (declaratorCase_ == 8) {
       return (IrTypeParameter) declarator_;
    }
    return IrTypeParameter.getDefaultInstance();
  }

  public static final int IR_VARIABLE_FIELD_NUMBER = 9;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
   */
  public boolean hasIrVariable() {
    return declaratorCase_ == 9;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
   */
  public IrVariable getIrVariable() {
    if (declaratorCase_ == 9) {
       return (IrVariable) declarator_;
    }
    return IrVariable.getDefaultInstance();
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
   */
  public IrVariableOrBuilder getIrVariableOrBuilder() {
    if (declaratorCase_ == 9) {
       return (IrVariable) declarator_;
    }
    return IrVariable.getDefaultInstance();
  }

  public static final int IR_VALUE_PARAMETER_FIELD_NUMBER = 10;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
   */
  public boolean hasIrValueParameter() {
    return declaratorCase_ == 10;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
   */
  public IrValueParameter getIrValueParameter() {
    if (declaratorCase_ == 10) {
       return (IrValueParameter) declarator_;
    }
    return IrValueParameter.getDefaultInstance();
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
   */
  public IrValueParameterOrBuilder getIrValueParameterOrBuilder() {
    if (declaratorCase_ == 10) {
       return (IrValueParameter) declarator_;
    }
    return IrValueParameter.getDefaultInstance();
  }

  public static final int IR_LOCAL_DELEGATED_PROPERTY_FIELD_NUMBER = 11;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
   */
  public boolean hasIrLocalDelegatedProperty() {
    return declaratorCase_ == 11;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
   */
  public IrLocalDelegatedProperty getIrLocalDelegatedProperty() {
    if (declaratorCase_ == 11) {
       return (IrLocalDelegatedProperty) declarator_;
    }
    return IrLocalDelegatedProperty.getDefaultInstance();
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
   */
  public IrLocalDelegatedPropertyOrBuilder getIrLocalDelegatedPropertyOrBuilder() {
    if (declaratorCase_ == 11) {
       return (IrLocalDelegatedProperty) declarator_;
    }
    return IrLocalDelegatedProperty.getDefaultInstance();
  }

  public static final int IR_TYPE_ALIAS_FIELD_NUMBER = 12;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
   */
  public boolean hasIrTypeAlias() {
    return declaratorCase_ == 12;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
   */
  public IrTypeAlias getIrTypeAlias() {
    if (declaratorCase_ == 12) {
       return (IrTypeAlias) declarator_;
    }
    return IrTypeAlias.getDefaultInstance();
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
   */
  public IrTypeAliasOrBuilder getIrTypeAliasOrBuilder() {
    if (declaratorCase_ == 12) {
       return (IrTypeAlias) declarator_;
    }
    return IrTypeAlias.getDefaultInstance();
  }

  public static final int IR_ERROR_DECLARATION_FIELD_NUMBER = 13;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorDeclaration ir_error_declaration = 13;</code>
   */
  public boolean hasIrErrorDeclaration() {
    return declaratorCase_ == 13;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorDeclaration ir_error_declaration = 13;</code>
   */
  public IrErrorDeclaration getIrErrorDeclaration() {
    if (declaratorCase_ == 13) {
       return (IrErrorDeclaration) declarator_;
    }
    return IrErrorDeclaration.getDefaultInstance();
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorDeclaration ir_error_declaration = 13;</code>
   */
  public IrErrorDeclarationOrBuilder getIrErrorDeclarationOrBuilder() {
    if (declaratorCase_ == 13) {
       return (IrErrorDeclaration) declarator_;
    }
    return IrErrorDeclaration.getDefaultInstance();
  }

  private void initFields() {
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (hasIrAnonymousInit()) {
      if (!getIrAnonymousInit().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasIrClass()) {
      if (!getIrClass().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasIrConstructor()) {
      if (!getIrConstructor().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasIrEnumEntry()) {
      if (!getIrEnumEntry().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasIrField()) {
      if (!getIrField().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasIrFunction()) {
      if (!getIrFunction().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasIrProperty()) {
      if (!getIrProperty().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasIrTypeParameter()) {
      if (!getIrTypeParameter().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasIrVariable()) {
      if (!getIrVariable().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasIrValueParameter()) {
      if (!getIrValueParameter().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasIrLocalDelegatedProperty()) {
      if (!getIrLocalDelegatedProperty().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasIrTypeAlias()) {
      if (!getIrTypeAlias().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasIrErrorDeclaration()) {
      if (!getIrErrorDeclaration().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (declaratorCase_ == 1) {
      output.writeMessage(1, (IrAnonymousInit) declarator_);
    }
    if (declaratorCase_ == 2) {
      output.writeMessage(2, (IrClass) declarator_);
    }
    if (declaratorCase_ == 3) {
      output.writeMessage(3, (IrConstructor) declarator_);
    }
    if (declaratorCase_ == 4) {
      output.writeMessage(4, (IrEnumEntry) declarator_);
    }
    if (declaratorCase_ == 5) {
      output.writeMessage(5, (IrField) declarator_);
    }
    if (declaratorCase_ == 6) {
      output.writeMessage(6, (IrFunction) declarator_);
    }
    if (declaratorCase_ == 7) {
      output.writeMessage(7, (IrProperty) declarator_);
    }
    if (declaratorCase_ == 8) {
      output.writeMessage(8, (IrTypeParameter) declarator_);
    }
    if (declaratorCase_ == 9) {
      output.writeMessage(9, (IrVariable) declarator_);
    }
    if (declaratorCase_ == 10) {
      output.writeMessage(10, (IrValueParameter) declarator_);
    }
    if (declaratorCase_ == 11) {
      output.writeMessage(11, (IrLocalDelegatedProperty) declarator_);
    }
    if (declaratorCase_ == 12) {
      output.writeMessage(12, (IrTypeAlias) declarator_);
    }
    if (declaratorCase_ == 13) {
      output.writeMessage(13, (IrErrorDeclaration) declarator_);
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (declaratorCase_ == 1) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(1, (IrAnonymousInit) declarator_);
    }
    if (declaratorCase_ == 2) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(2, (IrClass) declarator_);
    }
    if (declaratorCase_ == 3) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(3, (IrConstructor) declarator_);
    }
    if (declaratorCase_ == 4) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(4, (IrEnumEntry) declarator_);
    }
    if (declaratorCase_ == 5) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(5, (IrField) declarator_);
    }
    if (declaratorCase_ == 6) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(6, (IrFunction) declarator_);
    }
    if (declaratorCase_ == 7) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(7, (IrProperty) declarator_);
    }
    if (declaratorCase_ == 8) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(8, (IrTypeParameter) declarator_);
    }
    if (declaratorCase_ == 9) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(9, (IrVariable) declarator_);
    }
    if (declaratorCase_ == 10) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(10, (IrValueParameter) declarator_);
    }
    if (declaratorCase_ == 11) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(11, (IrLocalDelegatedProperty) declarator_);
    }
    if (declaratorCase_ == 12) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(12, (IrTypeAlias) declarator_);
    }
    if (declaratorCase_ == 13) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(13, (IrErrorDeclaration) declarator_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @Override
  protected Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static IrDeclaration parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static IrDeclaration parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static IrDeclaration parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static IrDeclaration parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static IrDeclaration parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static IrDeclaration parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static IrDeclaration parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static IrDeclaration parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static IrDeclaration parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static IrDeclaration parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(IrDeclaration prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @Override
  protected Builder newBuilderForType(
      org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration)
      IrDeclarationOrBuilder {
    public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrDeclaration_descriptor;
    }

    protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrDeclaration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              IrDeclaration.class, Builder.class);
    }

    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      declaratorCase_ = 0;
      declarator_ = null;
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrDeclaration_descriptor;
    }

    public IrDeclaration getDefaultInstanceForType() {
      return IrDeclaration.getDefaultInstance();
    }

    public IrDeclaration build() {
      IrDeclaration result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public IrDeclaration buildPartial() {
      IrDeclaration result = new IrDeclaration(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (declaratorCase_ == 1) {
        if (irAnonymousInitBuilder_ == null) {
          result.declarator_ = declarator_;
        } else {
          result.declarator_ = irAnonymousInitBuilder_.build();
        }
      }
      if (declaratorCase_ == 2) {
        if (irClassBuilder_ == null) {
          result.declarator_ = declarator_;
        } else {
          result.declarator_ = irClassBuilder_.build();
        }
      }
      if (declaratorCase_ == 3) {
        if (irConstructorBuilder_ == null) {
          result.declarator_ = declarator_;
        } else {
          result.declarator_ = irConstructorBuilder_.build();
        }
      }
      if (declaratorCase_ == 4) {
        if (irEnumEntryBuilder_ == null) {
          result.declarator_ = declarator_;
        } else {
          result.declarator_ = irEnumEntryBuilder_.build();
        }
      }
      if (declaratorCase_ == 5) {
        if (irFieldBuilder_ == null) {
          result.declarator_ = declarator_;
        } else {
          result.declarator_ = irFieldBuilder_.build();
        }
      }
      if (declaratorCase_ == 6) {
        if (irFunctionBuilder_ == null) {
          result.declarator_ = declarator_;
        } else {
          result.declarator_ = irFunctionBuilder_.build();
        }
      }
      if (declaratorCase_ == 7) {
        if (irPropertyBuilder_ == null) {
          result.declarator_ = declarator_;
        } else {
          result.declarator_ = irPropertyBuilder_.build();
        }
      }
      if (declaratorCase_ == 8) {
        if (irTypeParameterBuilder_ == null) {
          result.declarator_ = declarator_;
        } else {
          result.declarator_ = irTypeParameterBuilder_.build();
        }
      }
      if (declaratorCase_ == 9) {
        if (irVariableBuilder_ == null) {
          result.declarator_ = declarator_;
        } else {
          result.declarator_ = irVariableBuilder_.build();
        }
      }
      if (declaratorCase_ == 10) {
        if (irValueParameterBuilder_ == null) {
          result.declarator_ = declarator_;
        } else {
          result.declarator_ = irValueParameterBuilder_.build();
        }
      }
      if (declaratorCase_ == 11) {
        if (irLocalDelegatedPropertyBuilder_ == null) {
          result.declarator_ = declarator_;
        } else {
          result.declarator_ = irLocalDelegatedPropertyBuilder_.build();
        }
      }
      if (declaratorCase_ == 12) {
        if (irTypeAliasBuilder_ == null) {
          result.declarator_ = declarator_;
        } else {
          result.declarator_ = irTypeAliasBuilder_.build();
        }
      }
      if (declaratorCase_ == 13) {
        if (irErrorDeclarationBuilder_ == null) {
          result.declarator_ = declarator_;
        } else {
          result.declarator_ = irErrorDeclarationBuilder_.build();
        }
      }
      result.bitField0_ = to_bitField0_;
      result.declaratorCase_ = declaratorCase_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(org.jetbrains.kotlin.protobuf.Message other) {
      if (other instanceof IrDeclaration) {
        return mergeFrom((IrDeclaration)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(IrDeclaration other) {
      if (other == IrDeclaration.getDefaultInstance()) return this;
      switch (other.getDeclaratorCase()) {
        case IR_ANONYMOUS_INIT: {
          mergeIrAnonymousInit(other.getIrAnonymousInit());
          break;
        }
        case IR_CLASS: {
          mergeIrClass(other.getIrClass());
          break;
        }
        case IR_CONSTRUCTOR: {
          mergeIrConstructor(other.getIrConstructor());
          break;
        }
        case IR_ENUM_ENTRY: {
          mergeIrEnumEntry(other.getIrEnumEntry());
          break;
        }
        case IR_FIELD: {
          mergeIrField(other.getIrField());
          break;
        }
        case IR_FUNCTION: {
          mergeIrFunction(other.getIrFunction());
          break;
        }
        case IR_PROPERTY: {
          mergeIrProperty(other.getIrProperty());
          break;
        }
        case IR_TYPE_PARAMETER: {
          mergeIrTypeParameter(other.getIrTypeParameter());
          break;
        }
        case IR_VARIABLE: {
          mergeIrVariable(other.getIrVariable());
          break;
        }
        case IR_VALUE_PARAMETER: {
          mergeIrValueParameter(other.getIrValueParameter());
          break;
        }
        case IR_LOCAL_DELEGATED_PROPERTY: {
          mergeIrLocalDelegatedProperty(other.getIrLocalDelegatedProperty());
          break;
        }
        case IR_TYPE_ALIAS: {
          mergeIrTypeAlias(other.getIrTypeAlias());
          break;
        }
        case IR_ERROR_DECLARATION: {
          mergeIrErrorDeclaration(other.getIrErrorDeclaration());
          break;
        }
        case DECLARATOR_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      if (hasIrAnonymousInit()) {
        if (!getIrAnonymousInit().isInitialized()) {
          
          return false;
        }
      }
      if (hasIrClass()) {
        if (!getIrClass().isInitialized()) {
          
          return false;
        }
      }
      if (hasIrConstructor()) {
        if (!getIrConstructor().isInitialized()) {
          
          return false;
        }
      }
      if (hasIrEnumEntry()) {
        if (!getIrEnumEntry().isInitialized()) {
          
          return false;
        }
      }
      if (hasIrField()) {
        if (!getIrField().isInitialized()) {
          
          return false;
        }
      }
      if (hasIrFunction()) {
        if (!getIrFunction().isInitialized()) {
          
          return false;
        }
      }
      if (hasIrProperty()) {
        if (!getIrProperty().isInitialized()) {
          
          return false;
        }
      }
      if (hasIrTypeParameter()) {
        if (!getIrTypeParameter().isInitialized()) {
          
          return false;
        }
      }
      if (hasIrVariable()) {
        if (!getIrVariable().isInitialized()) {
          
          return false;
        }
      }
      if (hasIrValueParameter()) {
        if (!getIrValueParameter().isInitialized()) {
          
          return false;
        }
      }
      if (hasIrLocalDelegatedProperty()) {
        if (!getIrLocalDelegatedProperty().isInitialized()) {
          
          return false;
        }
      }
      if (hasIrTypeAlias()) {
        if (!getIrTypeAlias().isInitialized()) {
          
          return false;
        }
      }
      if (hasIrErrorDeclaration()) {
        if (!getIrErrorDeclaration().isInitialized()) {
          
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      IrDeclaration parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (IrDeclaration) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int declaratorCase_ = 0;
    private Object declarator_;
    public DeclaratorCase
        getDeclaratorCase() {
      return DeclaratorCase.valueOf(
          declaratorCase_);
    }

    public Builder clearDeclarator() {
      declaratorCase_ = 0;
      declarator_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrAnonymousInit, IrAnonymousInit.Builder, IrAnonymousInitOrBuilder> irAnonymousInitBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
     */
    public boolean hasIrAnonymousInit() {
      return declaratorCase_ == 1;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
     */
    public IrAnonymousInit getIrAnonymousInit() {
      if (irAnonymousInitBuilder_ == null) {
        if (declaratorCase_ == 1) {
          return (IrAnonymousInit) declarator_;
        }
        return IrAnonymousInit.getDefaultInstance();
      } else {
        if (declaratorCase_ == 1) {
          return irAnonymousInitBuilder_.getMessage();
        }
        return IrAnonymousInit.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
     */
    public Builder setIrAnonymousInit(IrAnonymousInit value) {
      if (irAnonymousInitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        declarator_ = value;
        onChanged();
      } else {
        irAnonymousInitBuilder_.setMessage(value);
      }
      declaratorCase_ = 1;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
     */
    public Builder setIrAnonymousInit(
        IrAnonymousInit.Builder builderForValue) {
      if (irAnonymousInitBuilder_ == null) {
        declarator_ = builderForValue.build();
        onChanged();
      } else {
        irAnonymousInitBuilder_.setMessage(builderForValue.build());
      }
      declaratorCase_ = 1;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
     */
    public Builder mergeIrAnonymousInit(IrAnonymousInit value) {
      if (irAnonymousInitBuilder_ == null) {
        if (declaratorCase_ == 1 &&
            declarator_ != IrAnonymousInit.getDefaultInstance()) {
          declarator_ = IrAnonymousInit.newBuilder((IrAnonymousInit) declarator_)
              .mergeFrom(value).buildPartial();
        } else {
          declarator_ = value;
        }
        onChanged();
      } else {
        if (declaratorCase_ == 1) {
          irAnonymousInitBuilder_.mergeFrom(value);
        }
        irAnonymousInitBuilder_.setMessage(value);
      }
      declaratorCase_ = 1;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
     */
    public Builder clearIrAnonymousInit() {
      if (irAnonymousInitBuilder_ == null) {
        if (declaratorCase_ == 1) {
          declaratorCase_ = 0;
          declarator_ = null;
          onChanged();
        }
      } else {
        if (declaratorCase_ == 1) {
          declaratorCase_ = 0;
          declarator_ = null;
        }
        irAnonymousInitBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
     */
    public IrAnonymousInit.Builder getIrAnonymousInitBuilder() {
      return getIrAnonymousInitFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
     */
    public IrAnonymousInitOrBuilder getIrAnonymousInitOrBuilder() {
      if ((declaratorCase_ == 1) && (irAnonymousInitBuilder_ != null)) {
        return irAnonymousInitBuilder_.getMessageOrBuilder();
      } else {
        if (declaratorCase_ == 1) {
          return (IrAnonymousInit) declarator_;
        }
        return IrAnonymousInit.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrAnonymousInit, IrAnonymousInit.Builder, IrAnonymousInitOrBuilder>
        getIrAnonymousInitFieldBuilder() {
      if (irAnonymousInitBuilder_ == null) {
        if (!(declaratorCase_ == 1)) {
          declarator_ = IrAnonymousInit.getDefaultInstance();
        }
        irAnonymousInitBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrAnonymousInit, IrAnonymousInit.Builder, IrAnonymousInitOrBuilder>(
                (IrAnonymousInit) declarator_,
                getParentForChildren(),
                isClean());
        declarator_ = null;
      }
      declaratorCase_ = 1;
      return irAnonymousInitBuilder_;
    }

    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrClass, IrClass.Builder, IrClassOrBuilder> irClassBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
     */
    public boolean hasIrClass() {
      return declaratorCase_ == 2;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
     */
    public IrClass getIrClass() {
      if (irClassBuilder_ == null) {
        if (declaratorCase_ == 2) {
          return (IrClass) declarator_;
        }
        return IrClass.getDefaultInstance();
      } else {
        if (declaratorCase_ == 2) {
          return irClassBuilder_.getMessage();
        }
        return IrClass.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
     */
    public Builder setIrClass(IrClass value) {
      if (irClassBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        declarator_ = value;
        onChanged();
      } else {
        irClassBuilder_.setMessage(value);
      }
      declaratorCase_ = 2;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
     */
    public Builder setIrClass(
        IrClass.Builder builderForValue) {
      if (irClassBuilder_ == null) {
        declarator_ = builderForValue.build();
        onChanged();
      } else {
        irClassBuilder_.setMessage(builderForValue.build());
      }
      declaratorCase_ = 2;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
     */
    public Builder mergeIrClass(IrClass value) {
      if (irClassBuilder_ == null) {
        if (declaratorCase_ == 2 &&
            declarator_ != IrClass.getDefaultInstance()) {
          declarator_ = IrClass.newBuilder((IrClass) declarator_)
              .mergeFrom(value).buildPartial();
        } else {
          declarator_ = value;
        }
        onChanged();
      } else {
        if (declaratorCase_ == 2) {
          irClassBuilder_.mergeFrom(value);
        }
        irClassBuilder_.setMessage(value);
      }
      declaratorCase_ = 2;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
     */
    public Builder clearIrClass() {
      if (irClassBuilder_ == null) {
        if (declaratorCase_ == 2) {
          declaratorCase_ = 0;
          declarator_ = null;
          onChanged();
        }
      } else {
        if (declaratorCase_ == 2) {
          declaratorCase_ = 0;
          declarator_ = null;
        }
        irClassBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
     */
    public IrClass.Builder getIrClassBuilder() {
      return getIrClassFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
     */
    public IrClassOrBuilder getIrClassOrBuilder() {
      if ((declaratorCase_ == 2) && (irClassBuilder_ != null)) {
        return irClassBuilder_.getMessageOrBuilder();
      } else {
        if (declaratorCase_ == 2) {
          return (IrClass) declarator_;
        }
        return IrClass.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrClass, IrClass.Builder, IrClassOrBuilder>
        getIrClassFieldBuilder() {
      if (irClassBuilder_ == null) {
        if (!(declaratorCase_ == 2)) {
          declarator_ = IrClass.getDefaultInstance();
        }
        irClassBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrClass, IrClass.Builder, IrClassOrBuilder>(
                (IrClass) declarator_,
                getParentForChildren(),
                isClean());
        declarator_ = null;
      }
      declaratorCase_ = 2;
      return irClassBuilder_;
    }

    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrConstructor, IrConstructor.Builder, IrConstructorOrBuilder> irConstructorBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
     */
    public boolean hasIrConstructor() {
      return declaratorCase_ == 3;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
     */
    public IrConstructor getIrConstructor() {
      if (irConstructorBuilder_ == null) {
        if (declaratorCase_ == 3) {
          return (IrConstructor) declarator_;
        }
        return IrConstructor.getDefaultInstance();
      } else {
        if (declaratorCase_ == 3) {
          return irConstructorBuilder_.getMessage();
        }
        return IrConstructor.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
     */
    public Builder setIrConstructor(IrConstructor value) {
      if (irConstructorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        declarator_ = value;
        onChanged();
      } else {
        irConstructorBuilder_.setMessage(value);
      }
      declaratorCase_ = 3;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
     */
    public Builder setIrConstructor(
        IrConstructor.Builder builderForValue) {
      if (irConstructorBuilder_ == null) {
        declarator_ = builderForValue.build();
        onChanged();
      } else {
        irConstructorBuilder_.setMessage(builderForValue.build());
      }
      declaratorCase_ = 3;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
     */
    public Builder mergeIrConstructor(IrConstructor value) {
      if (irConstructorBuilder_ == null) {
        if (declaratorCase_ == 3 &&
            declarator_ != IrConstructor.getDefaultInstance()) {
          declarator_ = IrConstructor.newBuilder((IrConstructor) declarator_)
              .mergeFrom(value).buildPartial();
        } else {
          declarator_ = value;
        }
        onChanged();
      } else {
        if (declaratorCase_ == 3) {
          irConstructorBuilder_.mergeFrom(value);
        }
        irConstructorBuilder_.setMessage(value);
      }
      declaratorCase_ = 3;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
     */
    public Builder clearIrConstructor() {
      if (irConstructorBuilder_ == null) {
        if (declaratorCase_ == 3) {
          declaratorCase_ = 0;
          declarator_ = null;
          onChanged();
        }
      } else {
        if (declaratorCase_ == 3) {
          declaratorCase_ = 0;
          declarator_ = null;
        }
        irConstructorBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
     */
    public IrConstructor.Builder getIrConstructorBuilder() {
      return getIrConstructorFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
     */
    public IrConstructorOrBuilder getIrConstructorOrBuilder() {
      if ((declaratorCase_ == 3) && (irConstructorBuilder_ != null)) {
        return irConstructorBuilder_.getMessageOrBuilder();
      } else {
        if (declaratorCase_ == 3) {
          return (IrConstructor) declarator_;
        }
        return IrConstructor.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrConstructor, IrConstructor.Builder, IrConstructorOrBuilder>
        getIrConstructorFieldBuilder() {
      if (irConstructorBuilder_ == null) {
        if (!(declaratorCase_ == 3)) {
          declarator_ = IrConstructor.getDefaultInstance();
        }
        irConstructorBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrConstructor, IrConstructor.Builder, IrConstructorOrBuilder>(
                (IrConstructor) declarator_,
                getParentForChildren(),
                isClean());
        declarator_ = null;
      }
      declaratorCase_ = 3;
      return irConstructorBuilder_;
    }

    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrEnumEntry, IrEnumEntry.Builder, IrEnumEntryOrBuilder> irEnumEntryBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
     */
    public boolean hasIrEnumEntry() {
      return declaratorCase_ == 4;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
     */
    public IrEnumEntry getIrEnumEntry() {
      if (irEnumEntryBuilder_ == null) {
        if (declaratorCase_ == 4) {
          return (IrEnumEntry) declarator_;
        }
        return IrEnumEntry.getDefaultInstance();
      } else {
        if (declaratorCase_ == 4) {
          return irEnumEntryBuilder_.getMessage();
        }
        return IrEnumEntry.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
     */
    public Builder setIrEnumEntry(IrEnumEntry value) {
      if (irEnumEntryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        declarator_ = value;
        onChanged();
      } else {
        irEnumEntryBuilder_.setMessage(value);
      }
      declaratorCase_ = 4;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
     */
    public Builder setIrEnumEntry(
        IrEnumEntry.Builder builderForValue) {
      if (irEnumEntryBuilder_ == null) {
        declarator_ = builderForValue.build();
        onChanged();
      } else {
        irEnumEntryBuilder_.setMessage(builderForValue.build());
      }
      declaratorCase_ = 4;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
     */
    public Builder mergeIrEnumEntry(IrEnumEntry value) {
      if (irEnumEntryBuilder_ == null) {
        if (declaratorCase_ == 4 &&
            declarator_ != IrEnumEntry.getDefaultInstance()) {
          declarator_ = IrEnumEntry.newBuilder((IrEnumEntry) declarator_)
              .mergeFrom(value).buildPartial();
        } else {
          declarator_ = value;
        }
        onChanged();
      } else {
        if (declaratorCase_ == 4) {
          irEnumEntryBuilder_.mergeFrom(value);
        }
        irEnumEntryBuilder_.setMessage(value);
      }
      declaratorCase_ = 4;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
     */
    public Builder clearIrEnumEntry() {
      if (irEnumEntryBuilder_ == null) {
        if (declaratorCase_ == 4) {
          declaratorCase_ = 0;
          declarator_ = null;
          onChanged();
        }
      } else {
        if (declaratorCase_ == 4) {
          declaratorCase_ = 0;
          declarator_ = null;
        }
        irEnumEntryBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
     */
    public IrEnumEntry.Builder getIrEnumEntryBuilder() {
      return getIrEnumEntryFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
     */
    public IrEnumEntryOrBuilder getIrEnumEntryOrBuilder() {
      if ((declaratorCase_ == 4) && (irEnumEntryBuilder_ != null)) {
        return irEnumEntryBuilder_.getMessageOrBuilder();
      } else {
        if (declaratorCase_ == 4) {
          return (IrEnumEntry) declarator_;
        }
        return IrEnumEntry.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrEnumEntry, IrEnumEntry.Builder, IrEnumEntryOrBuilder>
        getIrEnumEntryFieldBuilder() {
      if (irEnumEntryBuilder_ == null) {
        if (!(declaratorCase_ == 4)) {
          declarator_ = IrEnumEntry.getDefaultInstance();
        }
        irEnumEntryBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrEnumEntry, IrEnumEntry.Builder, IrEnumEntryOrBuilder>(
                (IrEnumEntry) declarator_,
                getParentForChildren(),
                isClean());
        declarator_ = null;
      }
      declaratorCase_ = 4;
      return irEnumEntryBuilder_;
    }

    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrField, IrField.Builder, IrFieldOrBuilder> irFieldBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
     */
    public boolean hasIrField() {
      return declaratorCase_ == 5;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
     */
    public IrField getIrField() {
      if (irFieldBuilder_ == null) {
        if (declaratorCase_ == 5) {
          return (IrField) declarator_;
        }
        return IrField.getDefaultInstance();
      } else {
        if (declaratorCase_ == 5) {
          return irFieldBuilder_.getMessage();
        }
        return IrField.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
     */
    public Builder setIrField(IrField value) {
      if (irFieldBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        declarator_ = value;
        onChanged();
      } else {
        irFieldBuilder_.setMessage(value);
      }
      declaratorCase_ = 5;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
     */
    public Builder setIrField(
        IrField.Builder builderForValue) {
      if (irFieldBuilder_ == null) {
        declarator_ = builderForValue.build();
        onChanged();
      } else {
        irFieldBuilder_.setMessage(builderForValue.build());
      }
      declaratorCase_ = 5;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
     */
    public Builder mergeIrField(IrField value) {
      if (irFieldBuilder_ == null) {
        if (declaratorCase_ == 5 &&
            declarator_ != IrField.getDefaultInstance()) {
          declarator_ = IrField.newBuilder((IrField) declarator_)
              .mergeFrom(value).buildPartial();
        } else {
          declarator_ = value;
        }
        onChanged();
      } else {
        if (declaratorCase_ == 5) {
          irFieldBuilder_.mergeFrom(value);
        }
        irFieldBuilder_.setMessage(value);
      }
      declaratorCase_ = 5;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
     */
    public Builder clearIrField() {
      if (irFieldBuilder_ == null) {
        if (declaratorCase_ == 5) {
          declaratorCase_ = 0;
          declarator_ = null;
          onChanged();
        }
      } else {
        if (declaratorCase_ == 5) {
          declaratorCase_ = 0;
          declarator_ = null;
        }
        irFieldBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
     */
    public IrField.Builder getIrFieldBuilder() {
      return getIrFieldFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
     */
    public IrFieldOrBuilder getIrFieldOrBuilder() {
      if ((declaratorCase_ == 5) && (irFieldBuilder_ != null)) {
        return irFieldBuilder_.getMessageOrBuilder();
      } else {
        if (declaratorCase_ == 5) {
          return (IrField) declarator_;
        }
        return IrField.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrField, IrField.Builder, IrFieldOrBuilder>
        getIrFieldFieldBuilder() {
      if (irFieldBuilder_ == null) {
        if (!(declaratorCase_ == 5)) {
          declarator_ = IrField.getDefaultInstance();
        }
        irFieldBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrField, IrField.Builder, IrFieldOrBuilder>(
                (IrField) declarator_,
                getParentForChildren(),
                isClean());
        declarator_ = null;
      }
      declaratorCase_ = 5;
      return irFieldBuilder_;
    }

    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrFunction, IrFunction.Builder, IrFunctionOrBuilder> irFunctionBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
     */
    public boolean hasIrFunction() {
      return declaratorCase_ == 6;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
     */
    public IrFunction getIrFunction() {
      if (irFunctionBuilder_ == null) {
        if (declaratorCase_ == 6) {
          return (IrFunction) declarator_;
        }
        return IrFunction.getDefaultInstance();
      } else {
        if (declaratorCase_ == 6) {
          return irFunctionBuilder_.getMessage();
        }
        return IrFunction.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
     */
    public Builder setIrFunction(IrFunction value) {
      if (irFunctionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        declarator_ = value;
        onChanged();
      } else {
        irFunctionBuilder_.setMessage(value);
      }
      declaratorCase_ = 6;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
     */
    public Builder setIrFunction(
        IrFunction.Builder builderForValue) {
      if (irFunctionBuilder_ == null) {
        declarator_ = builderForValue.build();
        onChanged();
      } else {
        irFunctionBuilder_.setMessage(builderForValue.build());
      }
      declaratorCase_ = 6;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
     */
    public Builder mergeIrFunction(IrFunction value) {
      if (irFunctionBuilder_ == null) {
        if (declaratorCase_ == 6 &&
            declarator_ != IrFunction.getDefaultInstance()) {
          declarator_ = IrFunction.newBuilder((IrFunction) declarator_)
              .mergeFrom(value).buildPartial();
        } else {
          declarator_ = value;
        }
        onChanged();
      } else {
        if (declaratorCase_ == 6) {
          irFunctionBuilder_.mergeFrom(value);
        }
        irFunctionBuilder_.setMessage(value);
      }
      declaratorCase_ = 6;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
     */
    public Builder clearIrFunction() {
      if (irFunctionBuilder_ == null) {
        if (declaratorCase_ == 6) {
          declaratorCase_ = 0;
          declarator_ = null;
          onChanged();
        }
      } else {
        if (declaratorCase_ == 6) {
          declaratorCase_ = 0;
          declarator_ = null;
        }
        irFunctionBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
     */
    public IrFunction.Builder getIrFunctionBuilder() {
      return getIrFunctionFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
     */
    public IrFunctionOrBuilder getIrFunctionOrBuilder() {
      if ((declaratorCase_ == 6) && (irFunctionBuilder_ != null)) {
        return irFunctionBuilder_.getMessageOrBuilder();
      } else {
        if (declaratorCase_ == 6) {
          return (IrFunction) declarator_;
        }
        return IrFunction.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrFunction, IrFunction.Builder, IrFunctionOrBuilder>
        getIrFunctionFieldBuilder() {
      if (irFunctionBuilder_ == null) {
        if (!(declaratorCase_ == 6)) {
          declarator_ = IrFunction.getDefaultInstance();
        }
        irFunctionBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrFunction, IrFunction.Builder, IrFunctionOrBuilder>(
                (IrFunction) declarator_,
                getParentForChildren(),
                isClean());
        declarator_ = null;
      }
      declaratorCase_ = 6;
      return irFunctionBuilder_;
    }

    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrProperty, IrProperty.Builder, IrPropertyOrBuilder> irPropertyBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
     */
    public boolean hasIrProperty() {
      return declaratorCase_ == 7;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
     */
    public IrProperty getIrProperty() {
      if (irPropertyBuilder_ == null) {
        if (declaratorCase_ == 7) {
          return (IrProperty) declarator_;
        }
        return IrProperty.getDefaultInstance();
      } else {
        if (declaratorCase_ == 7) {
          return irPropertyBuilder_.getMessage();
        }
        return IrProperty.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
     */
    public Builder setIrProperty(IrProperty value) {
      if (irPropertyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        declarator_ = value;
        onChanged();
      } else {
        irPropertyBuilder_.setMessage(value);
      }
      declaratorCase_ = 7;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
     */
    public Builder setIrProperty(
        IrProperty.Builder builderForValue) {
      if (irPropertyBuilder_ == null) {
        declarator_ = builderForValue.build();
        onChanged();
      } else {
        irPropertyBuilder_.setMessage(builderForValue.build());
      }
      declaratorCase_ = 7;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
     */
    public Builder mergeIrProperty(IrProperty value) {
      if (irPropertyBuilder_ == null) {
        if (declaratorCase_ == 7 &&
            declarator_ != IrProperty.getDefaultInstance()) {
          declarator_ = IrProperty.newBuilder((IrProperty) declarator_)
              .mergeFrom(value).buildPartial();
        } else {
          declarator_ = value;
        }
        onChanged();
      } else {
        if (declaratorCase_ == 7) {
          irPropertyBuilder_.mergeFrom(value);
        }
        irPropertyBuilder_.setMessage(value);
      }
      declaratorCase_ = 7;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
     */
    public Builder clearIrProperty() {
      if (irPropertyBuilder_ == null) {
        if (declaratorCase_ == 7) {
          declaratorCase_ = 0;
          declarator_ = null;
          onChanged();
        }
      } else {
        if (declaratorCase_ == 7) {
          declaratorCase_ = 0;
          declarator_ = null;
        }
        irPropertyBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
     */
    public IrProperty.Builder getIrPropertyBuilder() {
      return getIrPropertyFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
     */
    public IrPropertyOrBuilder getIrPropertyOrBuilder() {
      if ((declaratorCase_ == 7) && (irPropertyBuilder_ != null)) {
        return irPropertyBuilder_.getMessageOrBuilder();
      } else {
        if (declaratorCase_ == 7) {
          return (IrProperty) declarator_;
        }
        return IrProperty.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrProperty, IrProperty.Builder, IrPropertyOrBuilder>
        getIrPropertyFieldBuilder() {
      if (irPropertyBuilder_ == null) {
        if (!(declaratorCase_ == 7)) {
          declarator_ = IrProperty.getDefaultInstance();
        }
        irPropertyBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrProperty, IrProperty.Builder, IrPropertyOrBuilder>(
                (IrProperty) declarator_,
                getParentForChildren(),
                isClean());
        declarator_ = null;
      }
      declaratorCase_ = 7;
      return irPropertyBuilder_;
    }

    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrTypeParameter, IrTypeParameter.Builder, IrTypeParameterOrBuilder> irTypeParameterBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
     */
    public boolean hasIrTypeParameter() {
      return declaratorCase_ == 8;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
     */
    public IrTypeParameter getIrTypeParameter() {
      if (irTypeParameterBuilder_ == null) {
        if (declaratorCase_ == 8) {
          return (IrTypeParameter) declarator_;
        }
        return IrTypeParameter.getDefaultInstance();
      } else {
        if (declaratorCase_ == 8) {
          return irTypeParameterBuilder_.getMessage();
        }
        return IrTypeParameter.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
     */
    public Builder setIrTypeParameter(IrTypeParameter value) {
      if (irTypeParameterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        declarator_ = value;
        onChanged();
      } else {
        irTypeParameterBuilder_.setMessage(value);
      }
      declaratorCase_ = 8;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
     */
    public Builder setIrTypeParameter(
        IrTypeParameter.Builder builderForValue) {
      if (irTypeParameterBuilder_ == null) {
        declarator_ = builderForValue.build();
        onChanged();
      } else {
        irTypeParameterBuilder_.setMessage(builderForValue.build());
      }
      declaratorCase_ = 8;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
     */
    public Builder mergeIrTypeParameter(IrTypeParameter value) {
      if (irTypeParameterBuilder_ == null) {
        if (declaratorCase_ == 8 &&
            declarator_ != IrTypeParameter.getDefaultInstance()) {
          declarator_ = IrTypeParameter.newBuilder((IrTypeParameter) declarator_)
              .mergeFrom(value).buildPartial();
        } else {
          declarator_ = value;
        }
        onChanged();
      } else {
        if (declaratorCase_ == 8) {
          irTypeParameterBuilder_.mergeFrom(value);
        }
        irTypeParameterBuilder_.setMessage(value);
      }
      declaratorCase_ = 8;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
     */
    public Builder clearIrTypeParameter() {
      if (irTypeParameterBuilder_ == null) {
        if (declaratorCase_ == 8) {
          declaratorCase_ = 0;
          declarator_ = null;
          onChanged();
        }
      } else {
        if (declaratorCase_ == 8) {
          declaratorCase_ = 0;
          declarator_ = null;
        }
        irTypeParameterBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
     */
    public IrTypeParameter.Builder getIrTypeParameterBuilder() {
      return getIrTypeParameterFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
     */
    public IrTypeParameterOrBuilder getIrTypeParameterOrBuilder() {
      if ((declaratorCase_ == 8) && (irTypeParameterBuilder_ != null)) {
        return irTypeParameterBuilder_.getMessageOrBuilder();
      } else {
        if (declaratorCase_ == 8) {
          return (IrTypeParameter) declarator_;
        }
        return IrTypeParameter.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrTypeParameter, IrTypeParameter.Builder, IrTypeParameterOrBuilder>
        getIrTypeParameterFieldBuilder() {
      if (irTypeParameterBuilder_ == null) {
        if (!(declaratorCase_ == 8)) {
          declarator_ = IrTypeParameter.getDefaultInstance();
        }
        irTypeParameterBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrTypeParameter, IrTypeParameter.Builder, IrTypeParameterOrBuilder>(
                (IrTypeParameter) declarator_,
                getParentForChildren(),
                isClean());
        declarator_ = null;
      }
      declaratorCase_ = 8;
      return irTypeParameterBuilder_;
    }

    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrVariable, IrVariable.Builder, IrVariableOrBuilder> irVariableBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
     */
    public boolean hasIrVariable() {
      return declaratorCase_ == 9;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
     */
    public IrVariable getIrVariable() {
      if (irVariableBuilder_ == null) {
        if (declaratorCase_ == 9) {
          return (IrVariable) declarator_;
        }
        return IrVariable.getDefaultInstance();
      } else {
        if (declaratorCase_ == 9) {
          return irVariableBuilder_.getMessage();
        }
        return IrVariable.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
     */
    public Builder setIrVariable(IrVariable value) {
      if (irVariableBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        declarator_ = value;
        onChanged();
      } else {
        irVariableBuilder_.setMessage(value);
      }
      declaratorCase_ = 9;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
     */
    public Builder setIrVariable(
        IrVariable.Builder builderForValue) {
      if (irVariableBuilder_ == null) {
        declarator_ = builderForValue.build();
        onChanged();
      } else {
        irVariableBuilder_.setMessage(builderForValue.build());
      }
      declaratorCase_ = 9;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
     */
    public Builder mergeIrVariable(IrVariable value) {
      if (irVariableBuilder_ == null) {
        if (declaratorCase_ == 9 &&
            declarator_ != IrVariable.getDefaultInstance()) {
          declarator_ = IrVariable.newBuilder((IrVariable) declarator_)
              .mergeFrom(value).buildPartial();
        } else {
          declarator_ = value;
        }
        onChanged();
      } else {
        if (declaratorCase_ == 9) {
          irVariableBuilder_.mergeFrom(value);
        }
        irVariableBuilder_.setMessage(value);
      }
      declaratorCase_ = 9;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
     */
    public Builder clearIrVariable() {
      if (irVariableBuilder_ == null) {
        if (declaratorCase_ == 9) {
          declaratorCase_ = 0;
          declarator_ = null;
          onChanged();
        }
      } else {
        if (declaratorCase_ == 9) {
          declaratorCase_ = 0;
          declarator_ = null;
        }
        irVariableBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
     */
    public IrVariable.Builder getIrVariableBuilder() {
      return getIrVariableFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
     */
    public IrVariableOrBuilder getIrVariableOrBuilder() {
      if ((declaratorCase_ == 9) && (irVariableBuilder_ != null)) {
        return irVariableBuilder_.getMessageOrBuilder();
      } else {
        if (declaratorCase_ == 9) {
          return (IrVariable) declarator_;
        }
        return IrVariable.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrVariable, IrVariable.Builder, IrVariableOrBuilder>
        getIrVariableFieldBuilder() {
      if (irVariableBuilder_ == null) {
        if (!(declaratorCase_ == 9)) {
          declarator_ = IrVariable.getDefaultInstance();
        }
        irVariableBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrVariable, IrVariable.Builder, IrVariableOrBuilder>(
                (IrVariable) declarator_,
                getParentForChildren(),
                isClean());
        declarator_ = null;
      }
      declaratorCase_ = 9;
      return irVariableBuilder_;
    }

    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrValueParameter, IrValueParameter.Builder, IrValueParameterOrBuilder> irValueParameterBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
     */
    public boolean hasIrValueParameter() {
      return declaratorCase_ == 10;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
     */
    public IrValueParameter getIrValueParameter() {
      if (irValueParameterBuilder_ == null) {
        if (declaratorCase_ == 10) {
          return (IrValueParameter) declarator_;
        }
        return IrValueParameter.getDefaultInstance();
      } else {
        if (declaratorCase_ == 10) {
          return irValueParameterBuilder_.getMessage();
        }
        return IrValueParameter.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
     */
    public Builder setIrValueParameter(IrValueParameter value) {
      if (irValueParameterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        declarator_ = value;
        onChanged();
      } else {
        irValueParameterBuilder_.setMessage(value);
      }
      declaratorCase_ = 10;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
     */
    public Builder setIrValueParameter(
        IrValueParameter.Builder builderForValue) {
      if (irValueParameterBuilder_ == null) {
        declarator_ = builderForValue.build();
        onChanged();
      } else {
        irValueParameterBuilder_.setMessage(builderForValue.build());
      }
      declaratorCase_ = 10;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
     */
    public Builder mergeIrValueParameter(IrValueParameter value) {
      if (irValueParameterBuilder_ == null) {
        if (declaratorCase_ == 10 &&
            declarator_ != IrValueParameter.getDefaultInstance()) {
          declarator_ = IrValueParameter.newBuilder((IrValueParameter) declarator_)
              .mergeFrom(value).buildPartial();
        } else {
          declarator_ = value;
        }
        onChanged();
      } else {
        if (declaratorCase_ == 10) {
          irValueParameterBuilder_.mergeFrom(value);
        }
        irValueParameterBuilder_.setMessage(value);
      }
      declaratorCase_ = 10;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
     */
    public Builder clearIrValueParameter() {
      if (irValueParameterBuilder_ == null) {
        if (declaratorCase_ == 10) {
          declaratorCase_ = 0;
          declarator_ = null;
          onChanged();
        }
      } else {
        if (declaratorCase_ == 10) {
          declaratorCase_ = 0;
          declarator_ = null;
        }
        irValueParameterBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
     */
    public IrValueParameter.Builder getIrValueParameterBuilder() {
      return getIrValueParameterFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
     */
    public IrValueParameterOrBuilder getIrValueParameterOrBuilder() {
      if ((declaratorCase_ == 10) && (irValueParameterBuilder_ != null)) {
        return irValueParameterBuilder_.getMessageOrBuilder();
      } else {
        if (declaratorCase_ == 10) {
          return (IrValueParameter) declarator_;
        }
        return IrValueParameter.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrValueParameter, IrValueParameter.Builder, IrValueParameterOrBuilder>
        getIrValueParameterFieldBuilder() {
      if (irValueParameterBuilder_ == null) {
        if (!(declaratorCase_ == 10)) {
          declarator_ = IrValueParameter.getDefaultInstance();
        }
        irValueParameterBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrValueParameter, IrValueParameter.Builder, IrValueParameterOrBuilder>(
                (IrValueParameter) declarator_,
                getParentForChildren(),
                isClean());
        declarator_ = null;
      }
      declaratorCase_ = 10;
      return irValueParameterBuilder_;
    }

    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrLocalDelegatedProperty, IrLocalDelegatedProperty.Builder, IrLocalDelegatedPropertyOrBuilder> irLocalDelegatedPropertyBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
     */
    public boolean hasIrLocalDelegatedProperty() {
      return declaratorCase_ == 11;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
     */
    public IrLocalDelegatedProperty getIrLocalDelegatedProperty() {
      if (irLocalDelegatedPropertyBuilder_ == null) {
        if (declaratorCase_ == 11) {
          return (IrLocalDelegatedProperty) declarator_;
        }
        return IrLocalDelegatedProperty.getDefaultInstance();
      } else {
        if (declaratorCase_ == 11) {
          return irLocalDelegatedPropertyBuilder_.getMessage();
        }
        return IrLocalDelegatedProperty.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
     */
    public Builder setIrLocalDelegatedProperty(IrLocalDelegatedProperty value) {
      if (irLocalDelegatedPropertyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        declarator_ = value;
        onChanged();
      } else {
        irLocalDelegatedPropertyBuilder_.setMessage(value);
      }
      declaratorCase_ = 11;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
     */
    public Builder setIrLocalDelegatedProperty(
        IrLocalDelegatedProperty.Builder builderForValue) {
      if (irLocalDelegatedPropertyBuilder_ == null) {
        declarator_ = builderForValue.build();
        onChanged();
      } else {
        irLocalDelegatedPropertyBuilder_.setMessage(builderForValue.build());
      }
      declaratorCase_ = 11;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
     */
    public Builder mergeIrLocalDelegatedProperty(IrLocalDelegatedProperty value) {
      if (irLocalDelegatedPropertyBuilder_ == null) {
        if (declaratorCase_ == 11 &&
            declarator_ != IrLocalDelegatedProperty.getDefaultInstance()) {
          declarator_ = IrLocalDelegatedProperty.newBuilder((IrLocalDelegatedProperty) declarator_)
              .mergeFrom(value).buildPartial();
        } else {
          declarator_ = value;
        }
        onChanged();
      } else {
        if (declaratorCase_ == 11) {
          irLocalDelegatedPropertyBuilder_.mergeFrom(value);
        }
        irLocalDelegatedPropertyBuilder_.setMessage(value);
      }
      declaratorCase_ = 11;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
     */
    public Builder clearIrLocalDelegatedProperty() {
      if (irLocalDelegatedPropertyBuilder_ == null) {
        if (declaratorCase_ == 11) {
          declaratorCase_ = 0;
          declarator_ = null;
          onChanged();
        }
      } else {
        if (declaratorCase_ == 11) {
          declaratorCase_ = 0;
          declarator_ = null;
        }
        irLocalDelegatedPropertyBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
     */
    public IrLocalDelegatedProperty.Builder getIrLocalDelegatedPropertyBuilder() {
      return getIrLocalDelegatedPropertyFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
     */
    public IrLocalDelegatedPropertyOrBuilder getIrLocalDelegatedPropertyOrBuilder() {
      if ((declaratorCase_ == 11) && (irLocalDelegatedPropertyBuilder_ != null)) {
        return irLocalDelegatedPropertyBuilder_.getMessageOrBuilder();
      } else {
        if (declaratorCase_ == 11) {
          return (IrLocalDelegatedProperty) declarator_;
        }
        return IrLocalDelegatedProperty.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrLocalDelegatedProperty, IrLocalDelegatedProperty.Builder, IrLocalDelegatedPropertyOrBuilder>
        getIrLocalDelegatedPropertyFieldBuilder() {
      if (irLocalDelegatedPropertyBuilder_ == null) {
        if (!(declaratorCase_ == 11)) {
          declarator_ = IrLocalDelegatedProperty.getDefaultInstance();
        }
        irLocalDelegatedPropertyBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrLocalDelegatedProperty, IrLocalDelegatedProperty.Builder, IrLocalDelegatedPropertyOrBuilder>(
                (IrLocalDelegatedProperty) declarator_,
                getParentForChildren(),
                isClean());
        declarator_ = null;
      }
      declaratorCase_ = 11;
      return irLocalDelegatedPropertyBuilder_;
    }

    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrTypeAlias, IrTypeAlias.Builder, IrTypeAliasOrBuilder> irTypeAliasBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
     */
    public boolean hasIrTypeAlias() {
      return declaratorCase_ == 12;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
     */
    public IrTypeAlias getIrTypeAlias() {
      if (irTypeAliasBuilder_ == null) {
        if (declaratorCase_ == 12) {
          return (IrTypeAlias) declarator_;
        }
        return IrTypeAlias.getDefaultInstance();
      } else {
        if (declaratorCase_ == 12) {
          return irTypeAliasBuilder_.getMessage();
        }
        return IrTypeAlias.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
     */
    public Builder setIrTypeAlias(IrTypeAlias value) {
      if (irTypeAliasBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        declarator_ = value;
        onChanged();
      } else {
        irTypeAliasBuilder_.setMessage(value);
      }
      declaratorCase_ = 12;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
     */
    public Builder setIrTypeAlias(
        IrTypeAlias.Builder builderForValue) {
      if (irTypeAliasBuilder_ == null) {
        declarator_ = builderForValue.build();
        onChanged();
      } else {
        irTypeAliasBuilder_.setMessage(builderForValue.build());
      }
      declaratorCase_ = 12;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
     */
    public Builder mergeIrTypeAlias(IrTypeAlias value) {
      if (irTypeAliasBuilder_ == null) {
        if (declaratorCase_ == 12 &&
            declarator_ != IrTypeAlias.getDefaultInstance()) {
          declarator_ = IrTypeAlias.newBuilder((IrTypeAlias) declarator_)
              .mergeFrom(value).buildPartial();
        } else {
          declarator_ = value;
        }
        onChanged();
      } else {
        if (declaratorCase_ == 12) {
          irTypeAliasBuilder_.mergeFrom(value);
        }
        irTypeAliasBuilder_.setMessage(value);
      }
      declaratorCase_ = 12;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
     */
    public Builder clearIrTypeAlias() {
      if (irTypeAliasBuilder_ == null) {
        if (declaratorCase_ == 12) {
          declaratorCase_ = 0;
          declarator_ = null;
          onChanged();
        }
      } else {
        if (declaratorCase_ == 12) {
          declaratorCase_ = 0;
          declarator_ = null;
        }
        irTypeAliasBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
     */
    public IrTypeAlias.Builder getIrTypeAliasBuilder() {
      return getIrTypeAliasFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
     */
    public IrTypeAliasOrBuilder getIrTypeAliasOrBuilder() {
      if ((declaratorCase_ == 12) && (irTypeAliasBuilder_ != null)) {
        return irTypeAliasBuilder_.getMessageOrBuilder();
      } else {
        if (declaratorCase_ == 12) {
          return (IrTypeAlias) declarator_;
        }
        return IrTypeAlias.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrTypeAlias, IrTypeAlias.Builder, IrTypeAliasOrBuilder>
        getIrTypeAliasFieldBuilder() {
      if (irTypeAliasBuilder_ == null) {
        if (!(declaratorCase_ == 12)) {
          declarator_ = IrTypeAlias.getDefaultInstance();
        }
        irTypeAliasBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrTypeAlias, IrTypeAlias.Builder, IrTypeAliasOrBuilder>(
                (IrTypeAlias) declarator_,
                getParentForChildren(),
                isClean());
        declarator_ = null;
      }
      declaratorCase_ = 12;
      return irTypeAliasBuilder_;
    }

    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrErrorDeclaration, IrErrorDeclaration.Builder, IrErrorDeclarationOrBuilder> irErrorDeclarationBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorDeclaration ir_error_declaration = 13;</code>
     */
    public boolean hasIrErrorDeclaration() {
      return declaratorCase_ == 13;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorDeclaration ir_error_declaration = 13;</code>
     */
    public IrErrorDeclaration getIrErrorDeclaration() {
      if (irErrorDeclarationBuilder_ == null) {
        if (declaratorCase_ == 13) {
          return (IrErrorDeclaration) declarator_;
        }
        return IrErrorDeclaration.getDefaultInstance();
      } else {
        if (declaratorCase_ == 13) {
          return irErrorDeclarationBuilder_.getMessage();
        }
        return IrErrorDeclaration.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorDeclaration ir_error_declaration = 13;</code>
     */
    public Builder setIrErrorDeclaration(IrErrorDeclaration value) {
      if (irErrorDeclarationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        declarator_ = value;
        onChanged();
      } else {
        irErrorDeclarationBuilder_.setMessage(value);
      }
      declaratorCase_ = 13;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorDeclaration ir_error_declaration = 13;</code>
     */
    public Builder setIrErrorDeclaration(
        IrErrorDeclaration.Builder builderForValue) {
      if (irErrorDeclarationBuilder_ == null) {
        declarator_ = builderForValue.build();
        onChanged();
      } else {
        irErrorDeclarationBuilder_.setMessage(builderForValue.build());
      }
      declaratorCase_ = 13;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorDeclaration ir_error_declaration = 13;</code>
     */
    public Builder mergeIrErrorDeclaration(IrErrorDeclaration value) {
      if (irErrorDeclarationBuilder_ == null) {
        if (declaratorCase_ == 13 &&
            declarator_ != IrErrorDeclaration.getDefaultInstance()) {
          declarator_ = IrErrorDeclaration.newBuilder((IrErrorDeclaration) declarator_)
              .mergeFrom(value).buildPartial();
        } else {
          declarator_ = value;
        }
        onChanged();
      } else {
        if (declaratorCase_ == 13) {
          irErrorDeclarationBuilder_.mergeFrom(value);
        }
        irErrorDeclarationBuilder_.setMessage(value);
      }
      declaratorCase_ = 13;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorDeclaration ir_error_declaration = 13;</code>
     */
    public Builder clearIrErrorDeclaration() {
      if (irErrorDeclarationBuilder_ == null) {
        if (declaratorCase_ == 13) {
          declaratorCase_ = 0;
          declarator_ = null;
          onChanged();
        }
      } else {
        if (declaratorCase_ == 13) {
          declaratorCase_ = 0;
          declarator_ = null;
        }
        irErrorDeclarationBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorDeclaration ir_error_declaration = 13;</code>
     */
    public IrErrorDeclaration.Builder getIrErrorDeclarationBuilder() {
      return getIrErrorDeclarationFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorDeclaration ir_error_declaration = 13;</code>
     */
    public IrErrorDeclarationOrBuilder getIrErrorDeclarationOrBuilder() {
      if ((declaratorCase_ == 13) && (irErrorDeclarationBuilder_ != null)) {
        return irErrorDeclarationBuilder_.getMessageOrBuilder();
      } else {
        if (declaratorCase_ == 13) {
          return (IrErrorDeclaration) declarator_;
        }
        return IrErrorDeclaration.getDefaultInstance();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorDeclaration ir_error_declaration = 13;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrErrorDeclaration, IrErrorDeclaration.Builder, IrErrorDeclarationOrBuilder>
        getIrErrorDeclarationFieldBuilder() {
      if (irErrorDeclarationBuilder_ == null) {
        if (!(declaratorCase_ == 13)) {
          declarator_ = IrErrorDeclaration.getDefaultInstance();
        }
        irErrorDeclarationBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrErrorDeclaration, IrErrorDeclaration.Builder, IrErrorDeclarationOrBuilder>(
                (IrErrorDeclaration) declarator_,
                getParentForChildren(),
                isClean());
        declarator_ = null;
      }
      declaratorCase_ = 13;
      return irErrorDeclarationBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration)
  }

  static {
    defaultInstance = new IrDeclaration(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration)
}
