// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: compiler/ir/serialization.common/src/KotlinIr.debug.proto

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrClass}
 */
public final class IrClass extends
    org.jetbrains.kotlin.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrClass)
    IrClassOrBuilder {
  // Use IrClass.newBuilder() to construct.
  private IrClass(org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private IrClass(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final IrClass defaultInstance;
  public static IrClass getDefaultInstance() {
    return defaultInstance;
  }

  public IrClass getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final org.jetbrains.kotlin.protobuf.UnknownFieldSet unknownFields;
  @java.lang.Override
  public final org.jetbrains.kotlin.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private IrClass(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    org.jetbrains.kotlin.protobuf.UnknownFieldSet.Builder unknownFields =
        org.jetbrains.kotlin.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.Builder subBuilder = null;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              subBuilder = base_.toBuilder();
            }
            base_ = input.readMessage(org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(base_);
              base_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000001;
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            name_ = input.readInt32();
            break;
          }
          case 26: {
            org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder subBuilder = null;
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              subBuilder = thisReceiver_.toBuilder();
            }
            thisReceiver_ = input.readMessage(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(thisReceiver_);
              thisReceiver_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000004;
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              typeParameter_ = new java.util.ArrayList<org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter>();
              mutable_bitField0_ |= 0x00000008;
            }
            typeParameter_.add(input.readMessage(org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.PARSER, extensionRegistry));
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              declaration_ = new java.util.ArrayList<org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration>();
              mutable_bitField0_ |= 0x00000010;
            }
            declaration_.add(input.readMessage(org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.PARSER, extensionRegistry));
            break;
          }
          case 48: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              superType_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000020;
            }
            superType_.add(input.readInt32());
            break;
          }
          case 50: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
              superType_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000020;
            }
            while (input.getBytesUntilLimit() > 0) {
              superType_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 58: {
            org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.Builder subBuilder = null;
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              subBuilder = inlineClassRepresentation_.toBuilder();
            }
            inlineClassRepresentation_ = input.readMessage(org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(inlineClassRepresentation_);
              inlineClassRepresentation_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000008;
            break;
          }
          case 64: {
            if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
              sealedSubclass_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField0_ |= 0x00000100;
            }
            sealedSubclass_.add(input.readInt64());
            break;
          }
          case 66: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
              sealedSubclass_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField0_ |= 0x00000100;
            }
            while (input.getBytesUntilLimit() > 0) {
              sealedSubclass_.add(input.readInt64());
            }
            input.popLimit(limit);
            break;
          }
          case 74: {
            org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.Builder subBuilder = null;
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              subBuilder = multiFieldValueClassRepresentation_.toBuilder();
            }
            multiFieldValueClassRepresentation_ = input.readMessage(org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(multiFieldValueClassRepresentation_);
              multiFieldValueClassRepresentation_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000010;
            break;
          }
        }
      }
    } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        typeParameter_ = java.util.Collections.unmodifiableList(typeParameter_);
      }
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        declaration_ = java.util.Collections.unmodifiableList(declaration_);
      }
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        superType_ = java.util.Collections.unmodifiableList(superType_);
      }
      if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
        sealedSubclass_ = java.util.Collections.unmodifiableList(sealedSubclass_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrClass_descriptor;
  }

  protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrClass_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.class, org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.Builder.class);
  }

  public static org.jetbrains.kotlin.protobuf.Parser<IrClass> PARSER =
      new org.jetbrains.kotlin.protobuf.AbstractParser<IrClass>() {
    public IrClass parsePartialFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return new IrClass(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public org.jetbrains.kotlin.protobuf.Parser<IrClass> getParserForType() {
    return PARSER;
  }

  private int bitField0_;
  public static final int BASE_FIELD_NUMBER = 1;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base_;
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
   */
  public boolean hasBase() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase getBase() {
    return base_;
  }
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBaseOrBuilder getBaseOrBuilder() {
    return base_;
  }

  public static final int NAME_FIELD_NUMBER = 2;
  private int name_;
  /**
   * <code>required int32 name = 2;</code>
   */
  public boolean hasName() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>required int32 name = 2;</code>
   */
  public int getName() {
    return name_;
  }

  public static final int THIS_RECEIVER_FIELD_NUMBER = 3;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter thisReceiver_;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
   */
  public boolean hasThisReceiver() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter getThisReceiver() {
    return thisReceiver_;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameterOrBuilder getThisReceiverOrBuilder() {
    return thisReceiver_;
  }

  public static final int TYPE_PARAMETER_FIELD_NUMBER = 4;
  private java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter> typeParameter_;
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
   */
  public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter> getTypeParameterList() {
    return typeParameter_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
   */
  public java.util.List<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameterOrBuilder> 
      getTypeParameterOrBuilderList() {
    return typeParameter_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
   */
  public int getTypeParameterCount() {
    return typeParameter_.size();
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter getTypeParameter(int index) {
    return typeParameter_.get(index);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameterOrBuilder getTypeParameterOrBuilder(
      int index) {
    return typeParameter_.get(index);
  }

  public static final int DECLARATION_FIELD_NUMBER = 5;
  private java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration> declaration_;
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
   */
  public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration> getDeclarationList() {
    return declaration_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
   */
  public java.util.List<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationOrBuilder> 
      getDeclarationOrBuilderList() {
    return declaration_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
   */
  public int getDeclarationCount() {
    return declaration_.size();
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration getDeclaration(int index) {
    return declaration_.get(index);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationOrBuilder getDeclarationOrBuilder(
      int index) {
    return declaration_.get(index);
  }

  public static final int SUPER_TYPE_FIELD_NUMBER = 6;
  private java.util.List<java.lang.Integer> superType_;
  /**
   * <code>repeated int32 super_type = 6 [packed = true];</code>
   */
  public java.util.List<java.lang.Integer>
      getSuperTypeList() {
    return superType_;
  }
  /**
   * <code>repeated int32 super_type = 6 [packed = true];</code>
   */
  public int getSuperTypeCount() {
    return superType_.size();
  }
  /**
   * <code>repeated int32 super_type = 6 [packed = true];</code>
   */
  public int getSuperType(int index) {
    return superType_.get(index);
  }
  private int superTypeMemoizedSerializedSize = -1;

  public static final int INLINE_CLASS_REPRESENTATION_FIELD_NUMBER = 7;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inlineClassRepresentation_;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
   */
  public boolean hasInlineClassRepresentation() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation getInlineClassRepresentation() {
    return inlineClassRepresentation_;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentationOrBuilder getInlineClassRepresentationOrBuilder() {
    return inlineClassRepresentation_;
  }

  public static final int MULTI_FIELD_VALUE_CLASS_REPRESENTATION_FIELD_NUMBER = 9;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multiFieldValueClassRepresentation_;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
   */
  public boolean hasMultiFieldValueClassRepresentation() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation getMultiFieldValueClassRepresentation() {
    return multiFieldValueClassRepresentation_;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentationOrBuilder getMultiFieldValueClassRepresentationOrBuilder() {
    return multiFieldValueClassRepresentation_;
  }

  public static final int SEALED_SUBCLASS_FIELD_NUMBER = 8;
  private java.util.List<java.lang.Long> sealedSubclass_;
  /**
   * <code>repeated int64 sealed_subclass = 8 [packed = true];</code>
   */
  public java.util.List<java.lang.Long>
      getSealedSubclassList() {
    return sealedSubclass_;
  }
  /**
   * <code>repeated int64 sealed_subclass = 8 [packed = true];</code>
   */
  public int getSealedSubclassCount() {
    return sealedSubclass_.size();
  }
  /**
   * <code>repeated int64 sealed_subclass = 8 [packed = true];</code>
   */
  public long getSealedSubclass(int index) {
    return sealedSubclass_.get(index);
  }
  private int sealedSubclassMemoizedSerializedSize = -1;

  private void initFields() {
    base_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance();
    name_ = 0;
    thisReceiver_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.getDefaultInstance();
    typeParameter_ = java.util.Collections.emptyList();
    declaration_ = java.util.Collections.emptyList();
    superType_ = java.util.Collections.emptyList();
    inlineClassRepresentation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.getDefaultInstance();
    multiFieldValueClassRepresentation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.getDefaultInstance();
    sealedSubclass_ = java.util.Collections.emptyList();
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasBase()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasName()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!getBase().isInitialized()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (hasThisReceiver()) {
      if (!getThisReceiver().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getTypeParameterCount(); i++) {
      if (!getTypeParameter(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getDeclarationCount(); i++) {
      if (!getDeclaration(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasInlineClassRepresentation()) {
      if (!getInlineClassRepresentation().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeMessage(1, base_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(2, name_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeMessage(3, thisReceiver_);
    }
    for (int i = 0; i < typeParameter_.size(); i++) {
      output.writeMessage(4, typeParameter_.get(i));
    }
    for (int i = 0; i < declaration_.size(); i++) {
      output.writeMessage(5, declaration_.get(i));
    }
    if (getSuperTypeList().size() > 0) {
      output.writeRawVarint32(50);
      output.writeRawVarint32(superTypeMemoizedSerializedSize);
    }
    for (int i = 0; i < superType_.size(); i++) {
      output.writeInt32NoTag(superType_.get(i));
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeMessage(7, inlineClassRepresentation_);
    }
    if (getSealedSubclassList().size() > 0) {
      output.writeRawVarint32(66);
      output.writeRawVarint32(sealedSubclassMemoizedSerializedSize);
    }
    for (int i = 0; i < sealedSubclass_.size(); i++) {
      output.writeInt64NoTag(sealedSubclass_.get(i));
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeMessage(9, multiFieldValueClassRepresentation_);
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(1, base_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt32Size(2, name_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(3, thisReceiver_);
    }
    for (int i = 0; i < typeParameter_.size(); i++) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(4, typeParameter_.get(i));
    }
    for (int i = 0; i < declaration_.size(); i++) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(5, declaration_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < superType_.size(); i++) {
        dataSize += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(superType_.get(i));
      }
      size += dataSize;
      if (!getSuperTypeList().isEmpty()) {
        size += 1;
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      superTypeMemoizedSerializedSize = dataSize;
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(7, inlineClassRepresentation_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < sealedSubclass_.size(); i++) {
        dataSize += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeInt64SizeNoTag(sealedSubclass_.get(i));
      }
      size += dataSize;
      if (!getSealedSubclassList().isEmpty()) {
        size += 1;
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      sealedSubclassMemoizedSerializedSize = dataSize;
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(9, multiFieldValueClassRepresentation_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  protected java.lang.Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(org.jetbrains.kotlin.backend.common.serialization.proto.IrClass prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @java.lang.Override
  protected Builder newBuilderForType(
      org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrClass}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrClass)
      org.jetbrains.kotlin.backend.common.serialization.proto.IrClassOrBuilder {
    public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrClass_descriptor;
    }

    protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrClass_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.class, org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.Builder.class);
    }

    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getBaseFieldBuilder();
        getThisReceiverFieldBuilder();
        getTypeParameterFieldBuilder();
        getDeclarationFieldBuilder();
        getInlineClassRepresentationFieldBuilder();
        getMultiFieldValueClassRepresentationFieldBuilder();
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      if (baseBuilder_ == null) {
        base_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance();
      } else {
        baseBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      name_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      if (thisReceiverBuilder_ == null) {
        thisReceiver_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.getDefaultInstance();
      } else {
        thisReceiverBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (typeParameterBuilder_ == null) {
        typeParameter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        typeParameterBuilder_.clear();
      }
      if (declarationBuilder_ == null) {
        declaration_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
      } else {
        declarationBuilder_.clear();
      }
      superType_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      if (inlineClassRepresentationBuilder_ == null) {
        inlineClassRepresentation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.getDefaultInstance();
      } else {
        inlineClassRepresentationBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      if (multiFieldValueClassRepresentationBuilder_ == null) {
        multiFieldValueClassRepresentation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.getDefaultInstance();
      } else {
        multiFieldValueClassRepresentationBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      sealedSubclass_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000100);
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrClass_descriptor;
    }

    public org.jetbrains.kotlin.backend.common.serialization.proto.IrClass getDefaultInstanceForType() {
      return org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.getDefaultInstance();
    }

    public org.jetbrains.kotlin.backend.common.serialization.proto.IrClass build() {
      org.jetbrains.kotlin.backend.common.serialization.proto.IrClass result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.jetbrains.kotlin.backend.common.serialization.proto.IrClass buildPartial() {
      org.jetbrains.kotlin.backend.common.serialization.proto.IrClass result = new org.jetbrains.kotlin.backend.common.serialization.proto.IrClass(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      if (baseBuilder_ == null) {
        result.base_ = base_;
      } else {
        result.base_ = baseBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.name_ = name_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      if (thisReceiverBuilder_ == null) {
        result.thisReceiver_ = thisReceiver_;
      } else {
        result.thisReceiver_ = thisReceiverBuilder_.build();
      }
      if (typeParameterBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          typeParameter_ = java.util.Collections.unmodifiableList(typeParameter_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.typeParameter_ = typeParameter_;
      } else {
        result.typeParameter_ = typeParameterBuilder_.build();
      }
      if (declarationBuilder_ == null) {
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          declaration_ = java.util.Collections.unmodifiableList(declaration_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.declaration_ = declaration_;
      } else {
        result.declaration_ = declarationBuilder_.build();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        superType_ = java.util.Collections.unmodifiableList(superType_);
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.superType_ = superType_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000008;
      }
      if (inlineClassRepresentationBuilder_ == null) {
        result.inlineClassRepresentation_ = inlineClassRepresentation_;
      } else {
        result.inlineClassRepresentation_ = inlineClassRepresentationBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000010;
      }
      if (multiFieldValueClassRepresentationBuilder_ == null) {
        result.multiFieldValueClassRepresentation_ = multiFieldValueClassRepresentation_;
      } else {
        result.multiFieldValueClassRepresentation_ = multiFieldValueClassRepresentationBuilder_.build();
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        sealedSubclass_ = java.util.Collections.unmodifiableList(sealedSubclass_);
        bitField0_ = (bitField0_ & ~0x00000100);
      }
      result.sealedSubclass_ = sealedSubclass_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(org.jetbrains.kotlin.protobuf.Message other) {
      if (other instanceof org.jetbrains.kotlin.backend.common.serialization.proto.IrClass) {
        return mergeFrom((org.jetbrains.kotlin.backend.common.serialization.proto.IrClass)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.jetbrains.kotlin.backend.common.serialization.proto.IrClass other) {
      if (other == org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.getDefaultInstance()) return this;
      if (other.hasBase()) {
        mergeBase(other.getBase());
      }
      if (other.hasName()) {
        setName(other.getName());
      }
      if (other.hasThisReceiver()) {
        mergeThisReceiver(other.getThisReceiver());
      }
      if (typeParameterBuilder_ == null) {
        if (!other.typeParameter_.isEmpty()) {
          if (typeParameter_.isEmpty()) {
            typeParameter_ = other.typeParameter_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTypeParameterIsMutable();
            typeParameter_.addAll(other.typeParameter_);
          }
          onChanged();
        }
      } else {
        if (!other.typeParameter_.isEmpty()) {
          if (typeParameterBuilder_.isEmpty()) {
            typeParameterBuilder_.dispose();
            typeParameterBuilder_ = null;
            typeParameter_ = other.typeParameter_;
            bitField0_ = (bitField0_ & ~0x00000008);
            typeParameterBuilder_ = 
              org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getTypeParameterFieldBuilder() : null;
          } else {
            typeParameterBuilder_.addAllMessages(other.typeParameter_);
          }
        }
      }
      if (declarationBuilder_ == null) {
        if (!other.declaration_.isEmpty()) {
          if (declaration_.isEmpty()) {
            declaration_ = other.declaration_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureDeclarationIsMutable();
            declaration_.addAll(other.declaration_);
          }
          onChanged();
        }
      } else {
        if (!other.declaration_.isEmpty()) {
          if (declarationBuilder_.isEmpty()) {
            declarationBuilder_.dispose();
            declarationBuilder_ = null;
            declaration_ = other.declaration_;
            bitField0_ = (bitField0_ & ~0x00000010);
            declarationBuilder_ = 
              org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getDeclarationFieldBuilder() : null;
          } else {
            declarationBuilder_.addAllMessages(other.declaration_);
          }
        }
      }
      if (!other.superType_.isEmpty()) {
        if (superType_.isEmpty()) {
          superType_ = other.superType_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureSuperTypeIsMutable();
          superType_.addAll(other.superType_);
        }
        onChanged();
      }
      if (other.hasInlineClassRepresentation()) {
        mergeInlineClassRepresentation(other.getInlineClassRepresentation());
      }
      if (other.hasMultiFieldValueClassRepresentation()) {
        mergeMultiFieldValueClassRepresentation(other.getMultiFieldValueClassRepresentation());
      }
      if (!other.sealedSubclass_.isEmpty()) {
        if (sealedSubclass_.isEmpty()) {
          sealedSubclass_ = other.sealedSubclass_;
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          ensureSealedSubclassIsMutable();
          sealedSubclass_.addAll(other.sealedSubclass_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      if (!hasBase()) {
        
        return false;
      }
      if (!hasName()) {
        
        return false;
      }
      if (!getBase().isInitialized()) {
        
        return false;
      }
      if (hasThisReceiver()) {
        if (!getThisReceiver().isInitialized()) {
          
          return false;
        }
      }
      for (int i = 0; i < getTypeParameterCount(); i++) {
        if (!getTypeParameter(i).isInitialized()) {
          
          return false;
        }
      }
      for (int i = 0; i < getDeclarationCount(); i++) {
        if (!getDeclaration(i).isInitialized()) {
          
          return false;
        }
      }
      if (hasInlineClassRepresentation()) {
        if (!getInlineClassRepresentation().isInitialized()) {
          
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.jetbrains.kotlin.backend.common.serialization.proto.IrClass) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance();
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBaseOrBuilder> baseBuilder_;
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public boolean hasBase() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase getBase() {
      if (baseBuilder_ == null) {
        return base_;
      } else {
        return baseBuilder_.getMessage();
      }
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public Builder setBase(org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase value) {
      if (baseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        base_ = value;
        onChanged();
      } else {
        baseBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public Builder setBase(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.Builder builderForValue) {
      if (baseBuilder_ == null) {
        base_ = builderForValue.build();
        onChanged();
      } else {
        baseBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public Builder mergeBase(org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase value) {
      if (baseBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            base_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance()) {
          base_ =
            org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.newBuilder(base_).mergeFrom(value).buildPartial();
        } else {
          base_ = value;
        }
        onChanged();
      } else {
        baseBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public Builder clearBase() {
      if (baseBuilder_ == null) {
        base_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance();
        onChanged();
      } else {
        baseBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.Builder getBaseBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getBaseFieldBuilder().getBuilder();
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBaseOrBuilder getBaseOrBuilder() {
      if (baseBuilder_ != null) {
        return baseBuilder_.getMessageOrBuilder();
      } else {
        return base_;
      }
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBaseOrBuilder> 
        getBaseFieldBuilder() {
      if (baseBuilder_ == null) {
        baseBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBaseOrBuilder>(
                getBase(),
                getParentForChildren(),
                isClean());
        base_ = null;
      }
      return baseBuilder_;
    }

    private int name_ ;
    /**
     * <code>required int32 name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 name = 2;</code>
     */
    public int getName() {
      return name_;
    }
    /**
     * <code>required int32 name = 2;</code>
     */
    public Builder setName(int value) {
      bitField0_ |= 0x00000002;
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 name = 2;</code>
     */
    public Builder clearName() {
      bitField0_ = (bitField0_ & ~0x00000002);
      name_ = 0;
      onChanged();
      return this;
    }

    private org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter thisReceiver_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.getDefaultInstance();
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameterOrBuilder> thisReceiverBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
     */
    public boolean hasThisReceiver() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter getThisReceiver() {
      if (thisReceiverBuilder_ == null) {
        return thisReceiver_;
      } else {
        return thisReceiverBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
     */
    public Builder setThisReceiver(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
      if (thisReceiverBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        thisReceiver_ = value;
        onChanged();
      } else {
        thisReceiverBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
     */
    public Builder setThisReceiver(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder builderForValue) {
      if (thisReceiverBuilder_ == null) {
        thisReceiver_ = builderForValue.build();
        onChanged();
      } else {
        thisReceiverBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
     */
    public Builder mergeThisReceiver(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
      if (thisReceiverBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            thisReceiver_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.getDefaultInstance()) {
          thisReceiver_ =
            org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.newBuilder(thisReceiver_).mergeFrom(value).buildPartial();
        } else {
          thisReceiver_ = value;
        }
        onChanged();
      } else {
        thisReceiverBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
     */
    public Builder clearThisReceiver() {
      if (thisReceiverBuilder_ == null) {
        thisReceiver_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.getDefaultInstance();
        onChanged();
      } else {
        thisReceiverBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder getThisReceiverBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getThisReceiverFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameterOrBuilder getThisReceiverOrBuilder() {
      if (thisReceiverBuilder_ != null) {
        return thisReceiverBuilder_.getMessageOrBuilder();
      } else {
        return thisReceiver_;
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameterOrBuilder> 
        getThisReceiverFieldBuilder() {
      if (thisReceiverBuilder_ == null) {
        thisReceiverBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameterOrBuilder>(
                getThisReceiver(),
                getParentForChildren(),
                isClean());
        thisReceiver_ = null;
      }
      return thisReceiverBuilder_;
    }

    private java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter> typeParameter_ =
      java.util.Collections.emptyList();
    private void ensureTypeParameterIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        typeParameter_ = new java.util.ArrayList<org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter>(typeParameter_);
        bitField0_ |= 0x00000008;
       }
    }

    private org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameterOrBuilder> typeParameterBuilder_;

    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter> getTypeParameterList() {
      if (typeParameterBuilder_ == null) {
        return java.util.Collections.unmodifiableList(typeParameter_);
      } else {
        return typeParameterBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public int getTypeParameterCount() {
      if (typeParameterBuilder_ == null) {
        return typeParameter_.size();
      } else {
        return typeParameterBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter getTypeParameter(int index) {
      if (typeParameterBuilder_ == null) {
        return typeParameter_.get(index);
      } else {
        return typeParameterBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public Builder setTypeParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter value) {
      if (typeParameterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypeParameterIsMutable();
        typeParameter_.set(index, value);
        onChanged();
      } else {
        typeParameterBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public Builder setTypeParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder builderForValue) {
      if (typeParameterBuilder_ == null) {
        ensureTypeParameterIsMutable();
        typeParameter_.set(index, builderForValue.build());
        onChanged();
      } else {
        typeParameterBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public Builder addTypeParameter(org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter value) {
      if (typeParameterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypeParameterIsMutable();
        typeParameter_.add(value);
        onChanged();
      } else {
        typeParameterBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public Builder addTypeParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter value) {
      if (typeParameterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypeParameterIsMutable();
        typeParameter_.add(index, value);
        onChanged();
      } else {
        typeParameterBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public Builder addTypeParameter(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder builderForValue) {
      if (typeParameterBuilder_ == null) {
        ensureTypeParameterIsMutable();
        typeParameter_.add(builderForValue.build());
        onChanged();
      } else {
        typeParameterBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public Builder addTypeParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder builderForValue) {
      if (typeParameterBuilder_ == null) {
        ensureTypeParameterIsMutable();
        typeParameter_.add(index, builderForValue.build());
        onChanged();
      } else {
        typeParameterBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public Builder addAllTypeParameter(
        java.lang.Iterable<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter> values) {
      if (typeParameterBuilder_ == null) {
        ensureTypeParameterIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, typeParameter_);
        onChanged();
      } else {
        typeParameterBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public Builder clearTypeParameter() {
      if (typeParameterBuilder_ == null) {
        typeParameter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        typeParameterBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public Builder removeTypeParameter(int index) {
      if (typeParameterBuilder_ == null) {
        ensureTypeParameterIsMutable();
        typeParameter_.remove(index);
        onChanged();
      } else {
        typeParameterBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder getTypeParameterBuilder(
        int index) {
      return getTypeParameterFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameterOrBuilder getTypeParameterOrBuilder(
        int index) {
      if (typeParameterBuilder_ == null) {
        return typeParameter_.get(index);  } else {
        return typeParameterBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public java.util.List<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameterOrBuilder> 
         getTypeParameterOrBuilderList() {
      if (typeParameterBuilder_ != null) {
        return typeParameterBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(typeParameter_);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder addTypeParameterBuilder() {
      return getTypeParameterFieldBuilder().addBuilder(
          org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.getDefaultInstance());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder addTypeParameterBuilder(
        int index) {
      return getTypeParameterFieldBuilder().addBuilder(
          index, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.getDefaultInstance());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder> 
         getTypeParameterBuilderList() {
      return getTypeParameterFieldBuilder().getBuilderList();
    }
    private org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameterOrBuilder> 
        getTypeParameterFieldBuilder() {
      if (typeParameterBuilder_ == null) {
        typeParameterBuilder_ = new org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
            org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameterOrBuilder>(
                typeParameter_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        typeParameter_ = null;
      }
      return typeParameterBuilder_;
    }

    private java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration> declaration_ =
      java.util.Collections.emptyList();
    private void ensureDeclarationIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        declaration_ = new java.util.ArrayList<org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration>(declaration_);
        bitField0_ |= 0x00000010;
       }
    }

    private org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationOrBuilder> declarationBuilder_;

    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration> getDeclarationList() {
      if (declarationBuilder_ == null) {
        return java.util.Collections.unmodifiableList(declaration_);
      } else {
        return declarationBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public int getDeclarationCount() {
      if (declarationBuilder_ == null) {
        return declaration_.size();
      } else {
        return declarationBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration getDeclaration(int index) {
      if (declarationBuilder_ == null) {
        return declaration_.get(index);
      } else {
        return declarationBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public Builder setDeclaration(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration value) {
      if (declarationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDeclarationIsMutable();
        declaration_.set(index, value);
        onChanged();
      } else {
        declarationBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public Builder setDeclaration(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder builderForValue) {
      if (declarationBuilder_ == null) {
        ensureDeclarationIsMutable();
        declaration_.set(index, builderForValue.build());
        onChanged();
      } else {
        declarationBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public Builder addDeclaration(org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration value) {
      if (declarationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDeclarationIsMutable();
        declaration_.add(value);
        onChanged();
      } else {
        declarationBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public Builder addDeclaration(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration value) {
      if (declarationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDeclarationIsMutable();
        declaration_.add(index, value);
        onChanged();
      } else {
        declarationBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public Builder addDeclaration(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder builderForValue) {
      if (declarationBuilder_ == null) {
        ensureDeclarationIsMutable();
        declaration_.add(builderForValue.build());
        onChanged();
      } else {
        declarationBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public Builder addDeclaration(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder builderForValue) {
      if (declarationBuilder_ == null) {
        ensureDeclarationIsMutable();
        declaration_.add(index, builderForValue.build());
        onChanged();
      } else {
        declarationBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public Builder addAllDeclaration(
        java.lang.Iterable<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration> values) {
      if (declarationBuilder_ == null) {
        ensureDeclarationIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, declaration_);
        onChanged();
      } else {
        declarationBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public Builder clearDeclaration() {
      if (declarationBuilder_ == null) {
        declaration_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        declarationBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public Builder removeDeclaration(int index) {
      if (declarationBuilder_ == null) {
        ensureDeclarationIsMutable();
        declaration_.remove(index);
        onChanged();
      } else {
        declarationBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder getDeclarationBuilder(
        int index) {
      return getDeclarationFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationOrBuilder getDeclarationOrBuilder(
        int index) {
      if (declarationBuilder_ == null) {
        return declaration_.get(index);  } else {
        return declarationBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public java.util.List<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationOrBuilder> 
         getDeclarationOrBuilderList() {
      if (declarationBuilder_ != null) {
        return declarationBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(declaration_);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder addDeclarationBuilder() {
      return getDeclarationFieldBuilder().addBuilder(
          org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.getDefaultInstance());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder addDeclarationBuilder(
        int index) {
      return getDeclarationFieldBuilder().addBuilder(
          index, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.getDefaultInstance());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder> 
         getDeclarationBuilderList() {
      return getDeclarationFieldBuilder().getBuilderList();
    }
    private org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationOrBuilder> 
        getDeclarationFieldBuilder() {
      if (declarationBuilder_ == null) {
        declarationBuilder_ = new org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
            org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationOrBuilder>(
                declaration_,
                ((bitField0_ & 0x00000010) == 0x00000010),
                getParentForChildren(),
                isClean());
        declaration_ = null;
      }
      return declarationBuilder_;
    }

    private java.util.List<java.lang.Integer> superType_ = java.util.Collections.emptyList();
    private void ensureSuperTypeIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        superType_ = new java.util.ArrayList<java.lang.Integer>(superType_);
        bitField0_ |= 0x00000020;
       }
    }
    /**
     * <code>repeated int32 super_type = 6 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getSuperTypeList() {
      return java.util.Collections.unmodifiableList(superType_);
    }
    /**
     * <code>repeated int32 super_type = 6 [packed = true];</code>
     */
    public int getSuperTypeCount() {
      return superType_.size();
    }
    /**
     * <code>repeated int32 super_type = 6 [packed = true];</code>
     */
    public int getSuperType(int index) {
      return superType_.get(index);
    }
    /**
     * <code>repeated int32 super_type = 6 [packed = true];</code>
     */
    public Builder setSuperType(
        int index, int value) {
      ensureSuperTypeIsMutable();
      superType_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 super_type = 6 [packed = true];</code>
     */
    public Builder addSuperType(int value) {
      ensureSuperTypeIsMutable();
      superType_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 super_type = 6 [packed = true];</code>
     */
    public Builder addAllSuperType(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureSuperTypeIsMutable();
      org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
          values, superType_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 super_type = 6 [packed = true];</code>
     */
    public Builder clearSuperType() {
      superType_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }

    private org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inlineClassRepresentation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.getDefaultInstance();
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation, org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentationOrBuilder> inlineClassRepresentationBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
     */
    public boolean hasInlineClassRepresentation() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation getInlineClassRepresentation() {
      if (inlineClassRepresentationBuilder_ == null) {
        return inlineClassRepresentation_;
      } else {
        return inlineClassRepresentationBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
     */
    public Builder setInlineClassRepresentation(org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation value) {
      if (inlineClassRepresentationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        inlineClassRepresentation_ = value;
        onChanged();
      } else {
        inlineClassRepresentationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
     */
    public Builder setInlineClassRepresentation(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.Builder builderForValue) {
      if (inlineClassRepresentationBuilder_ == null) {
        inlineClassRepresentation_ = builderForValue.build();
        onChanged();
      } else {
        inlineClassRepresentationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
     */
    public Builder mergeInlineClassRepresentation(org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation value) {
      if (inlineClassRepresentationBuilder_ == null) {
        if (((bitField0_ & 0x00000040) == 0x00000040) &&
            inlineClassRepresentation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.getDefaultInstance()) {
          inlineClassRepresentation_ =
            org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.newBuilder(inlineClassRepresentation_).mergeFrom(value).buildPartial();
        } else {
          inlineClassRepresentation_ = value;
        }
        onChanged();
      } else {
        inlineClassRepresentationBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000040;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
     */
    public Builder clearInlineClassRepresentation() {
      if (inlineClassRepresentationBuilder_ == null) {
        inlineClassRepresentation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.getDefaultInstance();
        onChanged();
      } else {
        inlineClassRepresentationBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.Builder getInlineClassRepresentationBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getInlineClassRepresentationFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentationOrBuilder getInlineClassRepresentationOrBuilder() {
      if (inlineClassRepresentationBuilder_ != null) {
        return inlineClassRepresentationBuilder_.getMessageOrBuilder();
      } else {
        return inlineClassRepresentation_;
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation, org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentationOrBuilder> 
        getInlineClassRepresentationFieldBuilder() {
      if (inlineClassRepresentationBuilder_ == null) {
        inlineClassRepresentationBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation, org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentationOrBuilder>(
                getInlineClassRepresentation(),
                getParentForChildren(),
                isClean());
        inlineClassRepresentation_ = null;
      }
      return inlineClassRepresentationBuilder_;
    }

    private org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multiFieldValueClassRepresentation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.getDefaultInstance();
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation, org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentationOrBuilder> multiFieldValueClassRepresentationBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
     */
    public boolean hasMultiFieldValueClassRepresentation() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation getMultiFieldValueClassRepresentation() {
      if (multiFieldValueClassRepresentationBuilder_ == null) {
        return multiFieldValueClassRepresentation_;
      } else {
        return multiFieldValueClassRepresentationBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
     */
    public Builder setMultiFieldValueClassRepresentation(org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation value) {
      if (multiFieldValueClassRepresentationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        multiFieldValueClassRepresentation_ = value;
        onChanged();
      } else {
        multiFieldValueClassRepresentationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
     */
    public Builder setMultiFieldValueClassRepresentation(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.Builder builderForValue) {
      if (multiFieldValueClassRepresentationBuilder_ == null) {
        multiFieldValueClassRepresentation_ = builderForValue.build();
        onChanged();
      } else {
        multiFieldValueClassRepresentationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
     */
    public Builder mergeMultiFieldValueClassRepresentation(org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation value) {
      if (multiFieldValueClassRepresentationBuilder_ == null) {
        if (((bitField0_ & 0x00000080) == 0x00000080) &&
            multiFieldValueClassRepresentation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.getDefaultInstance()) {
          multiFieldValueClassRepresentation_ =
            org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.newBuilder(multiFieldValueClassRepresentation_).mergeFrom(value).buildPartial();
        } else {
          multiFieldValueClassRepresentation_ = value;
        }
        onChanged();
      } else {
        multiFieldValueClassRepresentationBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
     */
    public Builder clearMultiFieldValueClassRepresentation() {
      if (multiFieldValueClassRepresentationBuilder_ == null) {
        multiFieldValueClassRepresentation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.getDefaultInstance();
        onChanged();
      } else {
        multiFieldValueClassRepresentationBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.Builder getMultiFieldValueClassRepresentationBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getMultiFieldValueClassRepresentationFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentationOrBuilder getMultiFieldValueClassRepresentationOrBuilder() {
      if (multiFieldValueClassRepresentationBuilder_ != null) {
        return multiFieldValueClassRepresentationBuilder_.getMessageOrBuilder();
      } else {
        return multiFieldValueClassRepresentation_;
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation, org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentationOrBuilder> 
        getMultiFieldValueClassRepresentationFieldBuilder() {
      if (multiFieldValueClassRepresentationBuilder_ == null) {
        multiFieldValueClassRepresentationBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation, org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentationOrBuilder>(
                getMultiFieldValueClassRepresentation(),
                getParentForChildren(),
                isClean());
        multiFieldValueClassRepresentation_ = null;
      }
      return multiFieldValueClassRepresentationBuilder_;
    }

    private java.util.List<java.lang.Long> sealedSubclass_ = java.util.Collections.emptyList();
    private void ensureSealedSubclassIsMutable() {
      if (!((bitField0_ & 0x00000100) == 0x00000100)) {
        sealedSubclass_ = new java.util.ArrayList<java.lang.Long>(sealedSubclass_);
        bitField0_ |= 0x00000100;
       }
    }
    /**
     * <code>repeated int64 sealed_subclass = 8 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getSealedSubclassList() {
      return java.util.Collections.unmodifiableList(sealedSubclass_);
    }
    /**
     * <code>repeated int64 sealed_subclass = 8 [packed = true];</code>
     */
    public int getSealedSubclassCount() {
      return sealedSubclass_.size();
    }
    /**
     * <code>repeated int64 sealed_subclass = 8 [packed = true];</code>
     */
    public long getSealedSubclass(int index) {
      return sealedSubclass_.get(index);
    }
    /**
     * <code>repeated int64 sealed_subclass = 8 [packed = true];</code>
     */
    public Builder setSealedSubclass(
        int index, long value) {
      ensureSealedSubclassIsMutable();
      sealedSubclass_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 sealed_subclass = 8 [packed = true];</code>
     */
    public Builder addSealedSubclass(long value) {
      ensureSealedSubclassIsMutable();
      sealedSubclass_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 sealed_subclass = 8 [packed = true];</code>
     */
    public Builder addAllSealedSubclass(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureSealedSubclassIsMutable();
      org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
          values, sealedSubclass_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 sealed_subclass = 8 [packed = true];</code>
     */
    public Builder clearSealedSubclass() {
      sealedSubclass_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrClass)
  }

  static {
    defaultInstance = new IrClass(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrClass)
}
