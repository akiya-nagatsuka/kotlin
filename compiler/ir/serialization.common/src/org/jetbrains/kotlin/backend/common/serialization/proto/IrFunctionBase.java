// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: compiler/ir/serialization.common/src/KotlinIr.debug.proto

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase}
 */
public final class IrFunctionBase extends
    org.jetbrains.kotlin.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase)
    IrFunctionBaseOrBuilder {
  // Use IrFunctionBase.newBuilder() to construct.
  private IrFunctionBase(org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private IrFunctionBase(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final IrFunctionBase defaultInstance;
  public static IrFunctionBase getDefaultInstance() {
    return defaultInstance;
  }

  public IrFunctionBase getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final org.jetbrains.kotlin.protobuf.UnknownFieldSet unknownFields;
  @Override
  public final org.jetbrains.kotlin.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private IrFunctionBase(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    org.jetbrains.kotlin.protobuf.UnknownFieldSet.Builder unknownFields =
        org.jetbrains.kotlin.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            IrDeclarationBase.Builder subBuilder = null;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              subBuilder = base_.toBuilder();
            }
            base_ = input.readMessage(IrDeclarationBase.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(base_);
              base_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000001;
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            nameType_ = input.readInt64();
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              typeParameter_ = new java.util.ArrayList<IrTypeParameter>();
              mutable_bitField0_ |= 0x00000004;
            }
            typeParameter_.add(input.readMessage(IrTypeParameter.PARSER, extensionRegistry));
            break;
          }
          case 34: {
            IrValueParameter.Builder subBuilder = null;
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              subBuilder = dispatchReceiver_.toBuilder();
            }
            dispatchReceiver_ = input.readMessage(IrValueParameter.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dispatchReceiver_);
              dispatchReceiver_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000004;
            break;
          }
          case 42: {
            IrValueParameter.Builder subBuilder = null;
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              subBuilder = extensionReceiver_.toBuilder();
            }
            extensionReceiver_ = input.readMessage(IrValueParameter.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(extensionReceiver_);
              extensionReceiver_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000008;
            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              valueParameter_ = new java.util.ArrayList<IrValueParameter>();
              mutable_bitField0_ |= 0x00000040;
            }
            valueParameter_.add(input.readMessage(IrValueParameter.PARSER, extensionRegistry));
            break;
          }
          case 56: {
            bitField0_ |= 0x00000020;
            body_ = input.readInt32();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000010;
            contextReceiverParametersCount_ = input.readInt32();
            break;
          }
        }
      }
    } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        typeParameter_ = java.util.Collections.unmodifiableList(typeParameter_);
      }
      if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
        valueParameter_ = java.util.Collections.unmodifiableList(valueParameter_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrFunctionBase_descriptor;
  }

  protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrFunctionBase_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            IrFunctionBase.class, Builder.class);
  }

  public static org.jetbrains.kotlin.protobuf.Parser<IrFunctionBase> PARSER =
      new org.jetbrains.kotlin.protobuf.AbstractParser<IrFunctionBase>() {
    public IrFunctionBase parsePartialFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return new IrFunctionBase(input, extensionRegistry);
    }
  };

  @Override
  public org.jetbrains.kotlin.protobuf.Parser<IrFunctionBase> getParserForType() {
    return PARSER;
  }

  private int bitField0_;
  public static final int BASE_FIELD_NUMBER = 1;
  private IrDeclarationBase base_;
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
   */
  public boolean hasBase() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
   */
  public IrDeclarationBase getBase() {
    return base_;
  }
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
   */
  public IrDeclarationBaseOrBuilder getBaseOrBuilder() {
    return base_;
  }

  public static final int NAME_TYPE_FIELD_NUMBER = 2;
  private long nameType_;
  /**
   * <code>required int64 name_type = 2;</code>
   */
  public boolean hasNameType() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>required int64 name_type = 2;</code>
   */
  public long getNameType() {
    return nameType_;
  }

  public static final int TYPE_PARAMETER_FIELD_NUMBER = 3;
  private java.util.List<IrTypeParameter> typeParameter_;
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
   */
  public java.util.List<IrTypeParameter> getTypeParameterList() {
    return typeParameter_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
   */
  public java.util.List<? extends IrTypeParameterOrBuilder>
      getTypeParameterOrBuilderList() {
    return typeParameter_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
   */
  public int getTypeParameterCount() {
    return typeParameter_.size();
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
   */
  public IrTypeParameter getTypeParameter(int index) {
    return typeParameter_.get(index);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
   */
  public IrTypeParameterOrBuilder getTypeParameterOrBuilder(
      int index) {
    return typeParameter_.get(index);
  }

  public static final int DISPATCH_RECEIVER_FIELD_NUMBER = 4;
  private IrValueParameter dispatchReceiver_;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
   */
  public boolean hasDispatchReceiver() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
   */
  public IrValueParameter getDispatchReceiver() {
    return dispatchReceiver_;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
   */
  public IrValueParameterOrBuilder getDispatchReceiverOrBuilder() {
    return dispatchReceiver_;
  }

  public static final int EXTENSION_RECEIVER_FIELD_NUMBER = 5;
  private IrValueParameter extensionReceiver_;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
   */
  public boolean hasExtensionReceiver() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
   */
  public IrValueParameter getExtensionReceiver() {
    return extensionReceiver_;
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
   */
  public IrValueParameterOrBuilder getExtensionReceiverOrBuilder() {
    return extensionReceiver_;
  }

  public static final int CONTEXT_RECEIVER_PARAMETERS_COUNT_FIELD_NUMBER = 8;
  private int contextReceiverParametersCount_;
  /**
   * <code>optional int32 context_receiver_parameters_count = 8;</code>
   */
  public boolean hasContextReceiverParametersCount() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>optional int32 context_receiver_parameters_count = 8;</code>
   */
  public int getContextReceiverParametersCount() {
    return contextReceiverParametersCount_;
  }

  public static final int VALUE_PARAMETER_FIELD_NUMBER = 6;
  private java.util.List<IrValueParameter> valueParameter_;
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
   */
  public java.util.List<IrValueParameter> getValueParameterList() {
    return valueParameter_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
   */
  public java.util.List<? extends IrValueParameterOrBuilder>
      getValueParameterOrBuilderList() {
    return valueParameter_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
   */
  public int getValueParameterCount() {
    return valueParameter_.size();
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
   */
  public IrValueParameter getValueParameter(int index) {
    return valueParameter_.get(index);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
   */
  public IrValueParameterOrBuilder getValueParameterOrBuilder(
      int index) {
    return valueParameter_.get(index);
  }

  public static final int BODY_FIELD_NUMBER = 7;
  private int body_;
  /**
   * <code>optional int32 body = 7;</code>
   */
  public boolean hasBody() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <code>optional int32 body = 7;</code>
   */
  public int getBody() {
    return body_;
  }

  private void initFields() {
    base_ = IrDeclarationBase.getDefaultInstance();
    nameType_ = 0L;
    typeParameter_ = java.util.Collections.emptyList();
    dispatchReceiver_ = IrValueParameter.getDefaultInstance();
    extensionReceiver_ = IrValueParameter.getDefaultInstance();
    contextReceiverParametersCount_ = 0;
    valueParameter_ = java.util.Collections.emptyList();
    body_ = 0;
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasBase()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasNameType()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!getBase().isInitialized()) {
      memoizedIsInitialized = 0;
      return false;
    }
    for (int i = 0; i < getTypeParameterCount(); i++) {
      if (!getTypeParameter(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasDispatchReceiver()) {
      if (!getDispatchReceiver().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasExtensionReceiver()) {
      if (!getExtensionReceiver().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getValueParameterCount(); i++) {
      if (!getValueParameter(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeMessage(1, base_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt64(2, nameType_);
    }
    for (int i = 0; i < typeParameter_.size(); i++) {
      output.writeMessage(3, typeParameter_.get(i));
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeMessage(4, dispatchReceiver_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeMessage(5, extensionReceiver_);
    }
    for (int i = 0; i < valueParameter_.size(); i++) {
      output.writeMessage(6, valueParameter_.get(i));
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt32(7, body_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(8, contextReceiverParametersCount_);
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(1, base_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt64Size(2, nameType_);
    }
    for (int i = 0; i < typeParameter_.size(); i++) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(3, typeParameter_.get(i));
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(4, dispatchReceiver_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(5, extensionReceiver_);
    }
    for (int i = 0; i < valueParameter_.size(); i++) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(6, valueParameter_.get(i));
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt32Size(7, body_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt32Size(8, contextReceiverParametersCount_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @Override
  protected Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static IrFunctionBase parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static IrFunctionBase parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static IrFunctionBase parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static IrFunctionBase parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static IrFunctionBase parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static IrFunctionBase parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static IrFunctionBase parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static IrFunctionBase parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static IrFunctionBase parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static IrFunctionBase parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(IrFunctionBase prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @Override
  protected Builder newBuilderForType(
      org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase)
      IrFunctionBaseOrBuilder {
    public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrFunctionBase_descriptor;
    }

    protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrFunctionBase_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              IrFunctionBase.class, Builder.class);
    }

    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getBaseFieldBuilder();
        getTypeParameterFieldBuilder();
        getDispatchReceiverFieldBuilder();
        getExtensionReceiverFieldBuilder();
        getValueParameterFieldBuilder();
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      if (baseBuilder_ == null) {
        base_ = IrDeclarationBase.getDefaultInstance();
      } else {
        baseBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      nameType_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      if (typeParameterBuilder_ == null) {
        typeParameter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        typeParameterBuilder_.clear();
      }
      if (dispatchReceiverBuilder_ == null) {
        dispatchReceiver_ = IrValueParameter.getDefaultInstance();
      } else {
        dispatchReceiverBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      if (extensionReceiverBuilder_ == null) {
        extensionReceiver_ = IrValueParameter.getDefaultInstance();
      } else {
        extensionReceiverBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      contextReceiverParametersCount_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      if (valueParameterBuilder_ == null) {
        valueParameter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
      } else {
        valueParameterBuilder_.clear();
      }
      body_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrFunctionBase_descriptor;
    }

    public IrFunctionBase getDefaultInstanceForType() {
      return IrFunctionBase.getDefaultInstance();
    }

    public IrFunctionBase build() {
      IrFunctionBase result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public IrFunctionBase buildPartial() {
      IrFunctionBase result = new IrFunctionBase(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      if (baseBuilder_ == null) {
        result.base_ = base_;
      } else {
        result.base_ = baseBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.nameType_ = nameType_;
      if (typeParameterBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          typeParameter_ = java.util.Collections.unmodifiableList(typeParameter_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.typeParameter_ = typeParameter_;
      } else {
        result.typeParameter_ = typeParameterBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000004;
      }
      if (dispatchReceiverBuilder_ == null) {
        result.dispatchReceiver_ = dispatchReceiver_;
      } else {
        result.dispatchReceiver_ = dispatchReceiverBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000008;
      }
      if (extensionReceiverBuilder_ == null) {
        result.extensionReceiver_ = extensionReceiver_;
      } else {
        result.extensionReceiver_ = extensionReceiverBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000010;
      }
      result.contextReceiverParametersCount_ = contextReceiverParametersCount_;
      if (valueParameterBuilder_ == null) {
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          valueParameter_ = java.util.Collections.unmodifiableList(valueParameter_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.valueParameter_ = valueParameter_;
      } else {
        result.valueParameter_ = valueParameterBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000020;
      }
      result.body_ = body_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(org.jetbrains.kotlin.protobuf.Message other) {
      if (other instanceof IrFunctionBase) {
        return mergeFrom((IrFunctionBase)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(IrFunctionBase other) {
      if (other == IrFunctionBase.getDefaultInstance()) return this;
      if (other.hasBase()) {
        mergeBase(other.getBase());
      }
      if (other.hasNameType()) {
        setNameType(other.getNameType());
      }
      if (typeParameterBuilder_ == null) {
        if (!other.typeParameter_.isEmpty()) {
          if (typeParameter_.isEmpty()) {
            typeParameter_ = other.typeParameter_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTypeParameterIsMutable();
            typeParameter_.addAll(other.typeParameter_);
          }
          onChanged();
        }
      } else {
        if (!other.typeParameter_.isEmpty()) {
          if (typeParameterBuilder_.isEmpty()) {
            typeParameterBuilder_.dispose();
            typeParameterBuilder_ = null;
            typeParameter_ = other.typeParameter_;
            bitField0_ = (bitField0_ & ~0x00000004);
            typeParameterBuilder_ = 
              org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getTypeParameterFieldBuilder() : null;
          } else {
            typeParameterBuilder_.addAllMessages(other.typeParameter_);
          }
        }
      }
      if (other.hasDispatchReceiver()) {
        mergeDispatchReceiver(other.getDispatchReceiver());
      }
      if (other.hasExtensionReceiver()) {
        mergeExtensionReceiver(other.getExtensionReceiver());
      }
      if (other.hasContextReceiverParametersCount()) {
        setContextReceiverParametersCount(other.getContextReceiverParametersCount());
      }
      if (valueParameterBuilder_ == null) {
        if (!other.valueParameter_.isEmpty()) {
          if (valueParameter_.isEmpty()) {
            valueParameter_ = other.valueParameter_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureValueParameterIsMutable();
            valueParameter_.addAll(other.valueParameter_);
          }
          onChanged();
        }
      } else {
        if (!other.valueParameter_.isEmpty()) {
          if (valueParameterBuilder_.isEmpty()) {
            valueParameterBuilder_.dispose();
            valueParameterBuilder_ = null;
            valueParameter_ = other.valueParameter_;
            bitField0_ = (bitField0_ & ~0x00000040);
            valueParameterBuilder_ = 
              org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getValueParameterFieldBuilder() : null;
          } else {
            valueParameterBuilder_.addAllMessages(other.valueParameter_);
          }
        }
      }
      if (other.hasBody()) {
        setBody(other.getBody());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      if (!hasBase()) {
        
        return false;
      }
      if (!hasNameType()) {
        
        return false;
      }
      if (!getBase().isInitialized()) {
        
        return false;
      }
      for (int i = 0; i < getTypeParameterCount(); i++) {
        if (!getTypeParameter(i).isInitialized()) {
          
          return false;
        }
      }
      if (hasDispatchReceiver()) {
        if (!getDispatchReceiver().isInitialized()) {
          
          return false;
        }
      }
      if (hasExtensionReceiver()) {
        if (!getExtensionReceiver().isInitialized()) {
          
          return false;
        }
      }
      for (int i = 0; i < getValueParameterCount(); i++) {
        if (!getValueParameter(i).isInitialized()) {
          
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      IrFunctionBase parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (IrFunctionBase) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private IrDeclarationBase base_ = IrDeclarationBase.getDefaultInstance();
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrDeclarationBase, IrDeclarationBase.Builder, IrDeclarationBaseOrBuilder> baseBuilder_;
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public boolean hasBase() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public IrDeclarationBase getBase() {
      if (baseBuilder_ == null) {
        return base_;
      } else {
        return baseBuilder_.getMessage();
      }
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public Builder setBase(IrDeclarationBase value) {
      if (baseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        base_ = value;
        onChanged();
      } else {
        baseBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public Builder setBase(
        IrDeclarationBase.Builder builderForValue) {
      if (baseBuilder_ == null) {
        base_ = builderForValue.build();
        onChanged();
      } else {
        baseBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public Builder mergeBase(IrDeclarationBase value) {
      if (baseBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            base_ != IrDeclarationBase.getDefaultInstance()) {
          base_ =
            IrDeclarationBase.newBuilder(base_).mergeFrom(value).buildPartial();
        } else {
          base_ = value;
        }
        onChanged();
      } else {
        baseBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public Builder clearBase() {
      if (baseBuilder_ == null) {
        base_ = IrDeclarationBase.getDefaultInstance();
        onChanged();
      } else {
        baseBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public IrDeclarationBase.Builder getBaseBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getBaseFieldBuilder().getBuilder();
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public IrDeclarationBaseOrBuilder getBaseOrBuilder() {
      if (baseBuilder_ != null) {
        return baseBuilder_.getMessageOrBuilder();
      } else {
        return base_;
      }
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrDeclarationBase, IrDeclarationBase.Builder, IrDeclarationBaseOrBuilder>
        getBaseFieldBuilder() {
      if (baseBuilder_ == null) {
        baseBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrDeclarationBase, IrDeclarationBase.Builder, IrDeclarationBaseOrBuilder>(
                getBase(),
                getParentForChildren(),
                isClean());
        base_ = null;
      }
      return baseBuilder_;
    }

    private long nameType_ ;
    /**
     * <code>required int64 name_type = 2;</code>
     */
    public boolean hasNameType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 name_type = 2;</code>
     */
    public long getNameType() {
      return nameType_;
    }
    /**
     * <code>required int64 name_type = 2;</code>
     */
    public Builder setNameType(long value) {
      bitField0_ |= 0x00000002;
      nameType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int64 name_type = 2;</code>
     */
    public Builder clearNameType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      nameType_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<IrTypeParameter> typeParameter_ =
      java.util.Collections.emptyList();
    private void ensureTypeParameterIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        typeParameter_ = new java.util.ArrayList<IrTypeParameter>(typeParameter_);
        bitField0_ |= 0x00000004;
       }
    }

    private org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
        IrTypeParameter, IrTypeParameter.Builder, IrTypeParameterOrBuilder> typeParameterBuilder_;

    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public java.util.List<IrTypeParameter> getTypeParameterList() {
      if (typeParameterBuilder_ == null) {
        return java.util.Collections.unmodifiableList(typeParameter_);
      } else {
        return typeParameterBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public int getTypeParameterCount() {
      if (typeParameterBuilder_ == null) {
        return typeParameter_.size();
      } else {
        return typeParameterBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public IrTypeParameter getTypeParameter(int index) {
      if (typeParameterBuilder_ == null) {
        return typeParameter_.get(index);
      } else {
        return typeParameterBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public Builder setTypeParameter(
        int index, IrTypeParameter value) {
      if (typeParameterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypeParameterIsMutable();
        typeParameter_.set(index, value);
        onChanged();
      } else {
        typeParameterBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public Builder setTypeParameter(
        int index, IrTypeParameter.Builder builderForValue) {
      if (typeParameterBuilder_ == null) {
        ensureTypeParameterIsMutable();
        typeParameter_.set(index, builderForValue.build());
        onChanged();
      } else {
        typeParameterBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public Builder addTypeParameter(IrTypeParameter value) {
      if (typeParameterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypeParameterIsMutable();
        typeParameter_.add(value);
        onChanged();
      } else {
        typeParameterBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public Builder addTypeParameter(
        int index, IrTypeParameter value) {
      if (typeParameterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypeParameterIsMutable();
        typeParameter_.add(index, value);
        onChanged();
      } else {
        typeParameterBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public Builder addTypeParameter(
        IrTypeParameter.Builder builderForValue) {
      if (typeParameterBuilder_ == null) {
        ensureTypeParameterIsMutable();
        typeParameter_.add(builderForValue.build());
        onChanged();
      } else {
        typeParameterBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public Builder addTypeParameter(
        int index, IrTypeParameter.Builder builderForValue) {
      if (typeParameterBuilder_ == null) {
        ensureTypeParameterIsMutable();
        typeParameter_.add(index, builderForValue.build());
        onChanged();
      } else {
        typeParameterBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public Builder addAllTypeParameter(
        Iterable<? extends IrTypeParameter> values) {
      if (typeParameterBuilder_ == null) {
        ensureTypeParameterIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, typeParameter_);
        onChanged();
      } else {
        typeParameterBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public Builder clearTypeParameter() {
      if (typeParameterBuilder_ == null) {
        typeParameter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        typeParameterBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public Builder removeTypeParameter(int index) {
      if (typeParameterBuilder_ == null) {
        ensureTypeParameterIsMutable();
        typeParameter_.remove(index);
        onChanged();
      } else {
        typeParameterBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public IrTypeParameter.Builder getTypeParameterBuilder(
        int index) {
      return getTypeParameterFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public IrTypeParameterOrBuilder getTypeParameterOrBuilder(
        int index) {
      if (typeParameterBuilder_ == null) {
        return typeParameter_.get(index);  } else {
        return typeParameterBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public java.util.List<? extends IrTypeParameterOrBuilder>
         getTypeParameterOrBuilderList() {
      if (typeParameterBuilder_ != null) {
        return typeParameterBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(typeParameter_);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public IrTypeParameter.Builder addTypeParameterBuilder() {
      return getTypeParameterFieldBuilder().addBuilder(
          IrTypeParameter.getDefaultInstance());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public IrTypeParameter.Builder addTypeParameterBuilder(
        int index) {
      return getTypeParameterFieldBuilder().addBuilder(
          index, IrTypeParameter.getDefaultInstance());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public java.util.List<IrTypeParameter.Builder>
         getTypeParameterBuilderList() {
      return getTypeParameterFieldBuilder().getBuilderList();
    }
    private org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
        IrTypeParameter, IrTypeParameter.Builder, IrTypeParameterOrBuilder>
        getTypeParameterFieldBuilder() {
      if (typeParameterBuilder_ == null) {
        typeParameterBuilder_ = new org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
            IrTypeParameter, IrTypeParameter.Builder, IrTypeParameterOrBuilder>(
                typeParameter_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        typeParameter_ = null;
      }
      return typeParameterBuilder_;
    }

    private IrValueParameter dispatchReceiver_ = IrValueParameter.getDefaultInstance();
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrValueParameter, IrValueParameter.Builder, IrValueParameterOrBuilder> dispatchReceiverBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
     */
    public boolean hasDispatchReceiver() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
     */
    public IrValueParameter getDispatchReceiver() {
      if (dispatchReceiverBuilder_ == null) {
        return dispatchReceiver_;
      } else {
        return dispatchReceiverBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
     */
    public Builder setDispatchReceiver(IrValueParameter value) {
      if (dispatchReceiverBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dispatchReceiver_ = value;
        onChanged();
      } else {
        dispatchReceiverBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
     */
    public Builder setDispatchReceiver(
        IrValueParameter.Builder builderForValue) {
      if (dispatchReceiverBuilder_ == null) {
        dispatchReceiver_ = builderForValue.build();
        onChanged();
      } else {
        dispatchReceiverBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
     */
    public Builder mergeDispatchReceiver(IrValueParameter value) {
      if (dispatchReceiverBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            dispatchReceiver_ != IrValueParameter.getDefaultInstance()) {
          dispatchReceiver_ =
            IrValueParameter.newBuilder(dispatchReceiver_).mergeFrom(value).buildPartial();
        } else {
          dispatchReceiver_ = value;
        }
        onChanged();
      } else {
        dispatchReceiverBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
     */
    public Builder clearDispatchReceiver() {
      if (dispatchReceiverBuilder_ == null) {
        dispatchReceiver_ = IrValueParameter.getDefaultInstance();
        onChanged();
      } else {
        dispatchReceiverBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
     */
    public IrValueParameter.Builder getDispatchReceiverBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getDispatchReceiverFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
     */
    public IrValueParameterOrBuilder getDispatchReceiverOrBuilder() {
      if (dispatchReceiverBuilder_ != null) {
        return dispatchReceiverBuilder_.getMessageOrBuilder();
      } else {
        return dispatchReceiver_;
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrValueParameter, IrValueParameter.Builder, IrValueParameterOrBuilder>
        getDispatchReceiverFieldBuilder() {
      if (dispatchReceiverBuilder_ == null) {
        dispatchReceiverBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrValueParameter, IrValueParameter.Builder, IrValueParameterOrBuilder>(
                getDispatchReceiver(),
                getParentForChildren(),
                isClean());
        dispatchReceiver_ = null;
      }
      return dispatchReceiverBuilder_;
    }

    private IrValueParameter extensionReceiver_ = IrValueParameter.getDefaultInstance();
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrValueParameter, IrValueParameter.Builder, IrValueParameterOrBuilder> extensionReceiverBuilder_;
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
     */
    public boolean hasExtensionReceiver() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
     */
    public IrValueParameter getExtensionReceiver() {
      if (extensionReceiverBuilder_ == null) {
        return extensionReceiver_;
      } else {
        return extensionReceiverBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
     */
    public Builder setExtensionReceiver(IrValueParameter value) {
      if (extensionReceiverBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        extensionReceiver_ = value;
        onChanged();
      } else {
        extensionReceiverBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
     */
    public Builder setExtensionReceiver(
        IrValueParameter.Builder builderForValue) {
      if (extensionReceiverBuilder_ == null) {
        extensionReceiver_ = builderForValue.build();
        onChanged();
      } else {
        extensionReceiverBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
     */
    public Builder mergeExtensionReceiver(IrValueParameter value) {
      if (extensionReceiverBuilder_ == null) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            extensionReceiver_ != IrValueParameter.getDefaultInstance()) {
          extensionReceiver_ =
            IrValueParameter.newBuilder(extensionReceiver_).mergeFrom(value).buildPartial();
        } else {
          extensionReceiver_ = value;
        }
        onChanged();
      } else {
        extensionReceiverBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
     */
    public Builder clearExtensionReceiver() {
      if (extensionReceiverBuilder_ == null) {
        extensionReceiver_ = IrValueParameter.getDefaultInstance();
        onChanged();
      } else {
        extensionReceiverBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
     */
    public IrValueParameter.Builder getExtensionReceiverBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getExtensionReceiverFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
     */
    public IrValueParameterOrBuilder getExtensionReceiverOrBuilder() {
      if (extensionReceiverBuilder_ != null) {
        return extensionReceiverBuilder_.getMessageOrBuilder();
      } else {
        return extensionReceiver_;
      }
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        IrValueParameter, IrValueParameter.Builder, IrValueParameterOrBuilder>
        getExtensionReceiverFieldBuilder() {
      if (extensionReceiverBuilder_ == null) {
        extensionReceiverBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            IrValueParameter, IrValueParameter.Builder, IrValueParameterOrBuilder>(
                getExtensionReceiver(),
                getParentForChildren(),
                isClean());
        extensionReceiver_ = null;
      }
      return extensionReceiverBuilder_;
    }

    private int contextReceiverParametersCount_ ;
    /**
     * <code>optional int32 context_receiver_parameters_count = 8;</code>
     */
    public boolean hasContextReceiverParametersCount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 context_receiver_parameters_count = 8;</code>
     */
    public int getContextReceiverParametersCount() {
      return contextReceiverParametersCount_;
    }
    /**
     * <code>optional int32 context_receiver_parameters_count = 8;</code>
     */
    public Builder setContextReceiverParametersCount(int value) {
      bitField0_ |= 0x00000020;
      contextReceiverParametersCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 context_receiver_parameters_count = 8;</code>
     */
    public Builder clearContextReceiverParametersCount() {
      bitField0_ = (bitField0_ & ~0x00000020);
      contextReceiverParametersCount_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<IrValueParameter> valueParameter_ =
      java.util.Collections.emptyList();
    private void ensureValueParameterIsMutable() {
      if (!((bitField0_ & 0x00000040) == 0x00000040)) {
        valueParameter_ = new java.util.ArrayList<IrValueParameter>(valueParameter_);
        bitField0_ |= 0x00000040;
       }
    }

    private org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
        IrValueParameter, IrValueParameter.Builder, IrValueParameterOrBuilder> valueParameterBuilder_;

    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
     */
    public java.util.List<IrValueParameter> getValueParameterList() {
      if (valueParameterBuilder_ == null) {
        return java.util.Collections.unmodifiableList(valueParameter_);
      } else {
        return valueParameterBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
     */
    public int getValueParameterCount() {
      if (valueParameterBuilder_ == null) {
        return valueParameter_.size();
      } else {
        return valueParameterBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
     */
    public IrValueParameter getValueParameter(int index) {
      if (valueParameterBuilder_ == null) {
        return valueParameter_.get(index);
      } else {
        return valueParameterBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
     */
    public Builder setValueParameter(
        int index, IrValueParameter value) {
      if (valueParameterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueParameterIsMutable();
        valueParameter_.set(index, value);
        onChanged();
      } else {
        valueParameterBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
     */
    public Builder setValueParameter(
        int index, IrValueParameter.Builder builderForValue) {
      if (valueParameterBuilder_ == null) {
        ensureValueParameterIsMutable();
        valueParameter_.set(index, builderForValue.build());
        onChanged();
      } else {
        valueParameterBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
     */
    public Builder addValueParameter(IrValueParameter value) {
      if (valueParameterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueParameterIsMutable();
        valueParameter_.add(value);
        onChanged();
      } else {
        valueParameterBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
     */
    public Builder addValueParameter(
        int index, IrValueParameter value) {
      if (valueParameterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueParameterIsMutable();
        valueParameter_.add(index, value);
        onChanged();
      } else {
        valueParameterBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
     */
    public Builder addValueParameter(
        IrValueParameter.Builder builderForValue) {
      if (valueParameterBuilder_ == null) {
        ensureValueParameterIsMutable();
        valueParameter_.add(builderForValue.build());
        onChanged();
      } else {
        valueParameterBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
     */
    public Builder addValueParameter(
        int index, IrValueParameter.Builder builderForValue) {
      if (valueParameterBuilder_ == null) {
        ensureValueParameterIsMutable();
        valueParameter_.add(index, builderForValue.build());
        onChanged();
      } else {
        valueParameterBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
     */
    public Builder addAllValueParameter(
        Iterable<? extends IrValueParameter> values) {
      if (valueParameterBuilder_ == null) {
        ensureValueParameterIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, valueParameter_);
        onChanged();
      } else {
        valueParameterBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
     */
    public Builder clearValueParameter() {
      if (valueParameterBuilder_ == null) {
        valueParameter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        valueParameterBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
     */
    public Builder removeValueParameter(int index) {
      if (valueParameterBuilder_ == null) {
        ensureValueParameterIsMutable();
        valueParameter_.remove(index);
        onChanged();
      } else {
        valueParameterBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
     */
    public IrValueParameter.Builder getValueParameterBuilder(
        int index) {
      return getValueParameterFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
     */
    public IrValueParameterOrBuilder getValueParameterOrBuilder(
        int index) {
      if (valueParameterBuilder_ == null) {
        return valueParameter_.get(index);  } else {
        return valueParameterBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
     */
    public java.util.List<? extends IrValueParameterOrBuilder>
         getValueParameterOrBuilderList() {
      if (valueParameterBuilder_ != null) {
        return valueParameterBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(valueParameter_);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
     */
    public IrValueParameter.Builder addValueParameterBuilder() {
      return getValueParameterFieldBuilder().addBuilder(
          IrValueParameter.getDefaultInstance());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
     */
    public IrValueParameter.Builder addValueParameterBuilder(
        int index) {
      return getValueParameterFieldBuilder().addBuilder(
          index, IrValueParameter.getDefaultInstance());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value_parameter = 6;</code>
     */
    public java.util.List<IrValueParameter.Builder>
         getValueParameterBuilderList() {
      return getValueParameterFieldBuilder().getBuilderList();
    }
    private org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
        IrValueParameter, IrValueParameter.Builder, IrValueParameterOrBuilder>
        getValueParameterFieldBuilder() {
      if (valueParameterBuilder_ == null) {
        valueParameterBuilder_ = new org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
            IrValueParameter, IrValueParameter.Builder, IrValueParameterOrBuilder>(
                valueParameter_,
                ((bitField0_ & 0x00000040) == 0x00000040),
                getParentForChildren(),
                isClean());
        valueParameter_ = null;
      }
      return valueParameterBuilder_;
    }

    private int body_ ;
    /**
     * <code>optional int32 body = 7;</code>
     */
    public boolean hasBody() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 body = 7;</code>
     */
    public int getBody() {
      return body_;
    }
    /**
     * <code>optional int32 body = 7;</code>
     */
    public Builder setBody(int value) {
      bitField0_ |= 0x00000080;
      body_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 body = 7;</code>
     */
    public Builder clearBody() {
      bitField0_ = (bitField0_ & ~0x00000080);
      body_ = 0;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase)
  }

  static {
    defaultInstance = new IrFunctionBase(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase)
}
