// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: compiler/ir/serialization.common/src/KotlinIr.debug.proto

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference}
 */
public final class IrPropertyReference extends
    org.jetbrains.kotlin.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference)
    IrPropertyReferenceOrBuilder {
  // Use IrPropertyReference.newBuilder() to construct.
  private IrPropertyReference(org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private IrPropertyReference(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final IrPropertyReference defaultInstance;
  public static IrPropertyReference getDefaultInstance() {
    return defaultInstance;
  }

  public IrPropertyReference getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final org.jetbrains.kotlin.protobuf.UnknownFieldSet unknownFields;
  @Override
  public final org.jetbrains.kotlin.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private IrPropertyReference(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    org.jetbrains.kotlin.protobuf.UnknownFieldSet.Builder unknownFields =
        org.jetbrains.kotlin.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            field_ = input.readInt64();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            getter_ = input.readInt64();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            setter_ = input.readInt64();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            originName_ = input.readInt32();
            break;
          }
          case 42: {
            MemberAccessCommon.Builder subBuilder = null;
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              subBuilder = memberAccess_.toBuilder();
            }
            memberAccess_ = input.readMessage(MemberAccessCommon.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(memberAccess_);
              memberAccess_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000010;
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            symbol_ = input.readInt64();
            break;
          }
        }
      }
    } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrPropertyReference_descriptor;
  }

  protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrPropertyReference_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            IrPropertyReference.class, Builder.class);
  }

  public static org.jetbrains.kotlin.protobuf.Parser<IrPropertyReference> PARSER =
      new org.jetbrains.kotlin.protobuf.AbstractParser<IrPropertyReference>() {
    public IrPropertyReference parsePartialFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return new IrPropertyReference(input, extensionRegistry);
    }
  };

  @Override
  public org.jetbrains.kotlin.protobuf.Parser<IrPropertyReference> getParserForType() {
    return PARSER;
  }

  private int bitField0_;
  public static final int FIELD_FIELD_NUMBER = 1;
  private long field_;
  /**
   * <code>optional int64 field = 1;</code>
   */
  public boolean hasField() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>optional int64 field = 1;</code>
   */
  public long getField() {
    return field_;
  }

  public static final int GETTER_FIELD_NUMBER = 2;
  private long getter_;
  /**
   * <code>optional int64 getter = 2;</code>
   */
  public boolean hasGetter() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional int64 getter = 2;</code>
   */
  public long getGetter() {
    return getter_;
  }

  public static final int SETTER_FIELD_NUMBER = 3;
  private long setter_;
  /**
   * <code>optional int64 setter = 3;</code>
   */
  public boolean hasSetter() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>optional int64 setter = 3;</code>
   */
  public long getSetter() {
    return setter_;
  }

  public static final int ORIGIN_NAME_FIELD_NUMBER = 4;
  private int originName_;
  /**
   * <code>optional int32 origin_name = 4;</code>
   */
  public boolean hasOriginName() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>optional int32 origin_name = 4;</code>
   */
  public int getOriginName() {
    return originName_;
  }

  public static final int MEMBER_ACCESS_FIELD_NUMBER = 5;
  private MemberAccessCommon memberAccess_;
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.MemberAccessCommon member_access = 5;</code>
   */
  public boolean hasMemberAccess() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.MemberAccessCommon member_access = 5;</code>
   */
  public MemberAccessCommon getMemberAccess() {
    return memberAccess_;
  }
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.MemberAccessCommon member_access = 5;</code>
   */
  public MemberAccessCommonOrBuilder getMemberAccessOrBuilder() {
    return memberAccess_;
  }

  public static final int SYMBOL_FIELD_NUMBER = 6;
  private long symbol_;
  /**
   * <code>required int64 symbol = 6;</code>
   */
  public boolean hasSymbol() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <code>required int64 symbol = 6;</code>
   */
  public long getSymbol() {
    return symbol_;
  }

  private void initFields() {
    field_ = 0L;
    getter_ = 0L;
    setter_ = 0L;
    originName_ = 0;
    memberAccess_ = MemberAccessCommon.getDefaultInstance();
    symbol_ = 0L;
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasMemberAccess()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasSymbol()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!getMemberAccess().isInitialized()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt64(1, field_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt64(2, getter_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt64(3, setter_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(4, originName_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeMessage(5, memberAccess_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt64(6, symbol_);
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt64Size(1, field_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt64Size(2, getter_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt64Size(3, setter_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt32Size(4, originName_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(5, memberAccess_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt64Size(6, symbol_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @Override
  protected Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static IrPropertyReference parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static IrPropertyReference parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static IrPropertyReference parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static IrPropertyReference parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static IrPropertyReference parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static IrPropertyReference parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static IrPropertyReference parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static IrPropertyReference parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static IrPropertyReference parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static IrPropertyReference parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(IrPropertyReference prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @Override
  protected Builder newBuilderForType(
      org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference)
      IrPropertyReferenceOrBuilder {
    public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrPropertyReference_descriptor;
    }

    protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrPropertyReference_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              IrPropertyReference.class, Builder.class);
    }

    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getMemberAccessFieldBuilder();
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      field_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000001);
      getter_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      setter_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000004);
      originName_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      if (memberAccessBuilder_ == null) {
        memberAccess_ = MemberAccessCommon.getDefaultInstance();
      } else {
        memberAccessBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      symbol_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrPropertyReference_descriptor;
    }

    public IrPropertyReference getDefaultInstanceForType() {
      return IrPropertyReference.getDefaultInstance();
    }

    public IrPropertyReference build() {
      IrPropertyReference result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public IrPropertyReference buildPartial() {
      IrPropertyReference result = new IrPropertyReference(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.field_ = field_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.getter_ = getter_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.setter_ = setter_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.originName_ = originName_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      if (memberAccessBuilder_ == null) {
        result.memberAccess_ = memberAccess_;
      } else {
        result.memberAccess_ = memberAccessBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.symbol_ = symbol_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(org.jetbrains.kotlin.protobuf.Message other) {
      if (other instanceof IrPropertyReference) {
        return mergeFrom((IrPropertyReference)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(IrPropertyReference other) {
      if (other == IrPropertyReference.getDefaultInstance()) return this;
      if (other.hasField()) {
        setField(other.getField());
      }
      if (other.hasGetter()) {
        setGetter(other.getGetter());
      }
      if (other.hasSetter()) {
        setSetter(other.getSetter());
      }
      if (other.hasOriginName()) {
        setOriginName(other.getOriginName());
      }
      if (other.hasMemberAccess()) {
        mergeMemberAccess(other.getMemberAccess());
      }
      if (other.hasSymbol()) {
        setSymbol(other.getSymbol());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      if (!hasMemberAccess()) {
        
        return false;
      }
      if (!hasSymbol()) {
        
        return false;
      }
      if (!getMemberAccess().isInitialized()) {
        
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      IrPropertyReference parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (IrPropertyReference) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long field_ ;
    /**
     * <code>optional int64 field = 1;</code>
     */
    public boolean hasField() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 field = 1;</code>
     */
    public long getField() {
      return field_;
    }
    /**
     * <code>optional int64 field = 1;</code>
     */
    public Builder setField(long value) {
      bitField0_ |= 0x00000001;
      field_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 field = 1;</code>
     */
    public Builder clearField() {
      bitField0_ = (bitField0_ & ~0x00000001);
      field_ = 0L;
      onChanged();
      return this;
    }

    private long getter_ ;
    /**
     * <code>optional int64 getter = 2;</code>
     */
    public boolean hasGetter() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 getter = 2;</code>
     */
    public long getGetter() {
      return getter_;
    }
    /**
     * <code>optional int64 getter = 2;</code>
     */
    public Builder setGetter(long value) {
      bitField0_ |= 0x00000002;
      getter_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 getter = 2;</code>
     */
    public Builder clearGetter() {
      bitField0_ = (bitField0_ & ~0x00000002);
      getter_ = 0L;
      onChanged();
      return this;
    }

    private long setter_ ;
    /**
     * <code>optional int64 setter = 3;</code>
     */
    public boolean hasSetter() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 setter = 3;</code>
     */
    public long getSetter() {
      return setter_;
    }
    /**
     * <code>optional int64 setter = 3;</code>
     */
    public Builder setSetter(long value) {
      bitField0_ |= 0x00000004;
      setter_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 setter = 3;</code>
     */
    public Builder clearSetter() {
      bitField0_ = (bitField0_ & ~0x00000004);
      setter_ = 0L;
      onChanged();
      return this;
    }

    private int originName_ ;
    /**
     * <code>optional int32 origin_name = 4;</code>
     */
    public boolean hasOriginName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 origin_name = 4;</code>
     */
    public int getOriginName() {
      return originName_;
    }
    /**
     * <code>optional int32 origin_name = 4;</code>
     */
    public Builder setOriginName(int value) {
      bitField0_ |= 0x00000008;
      originName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 origin_name = 4;</code>
     */
    public Builder clearOriginName() {
      bitField0_ = (bitField0_ & ~0x00000008);
      originName_ = 0;
      onChanged();
      return this;
    }

    private MemberAccessCommon memberAccess_ = MemberAccessCommon.getDefaultInstance();
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        MemberAccessCommon, MemberAccessCommon.Builder, MemberAccessCommonOrBuilder> memberAccessBuilder_;
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.MemberAccessCommon member_access = 5;</code>
     */
    public boolean hasMemberAccess() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.MemberAccessCommon member_access = 5;</code>
     */
    public MemberAccessCommon getMemberAccess() {
      if (memberAccessBuilder_ == null) {
        return memberAccess_;
      } else {
        return memberAccessBuilder_.getMessage();
      }
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.MemberAccessCommon member_access = 5;</code>
     */
    public Builder setMemberAccess(MemberAccessCommon value) {
      if (memberAccessBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        memberAccess_ = value;
        onChanged();
      } else {
        memberAccessBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.MemberAccessCommon member_access = 5;</code>
     */
    public Builder setMemberAccess(
        MemberAccessCommon.Builder builderForValue) {
      if (memberAccessBuilder_ == null) {
        memberAccess_ = builderForValue.build();
        onChanged();
      } else {
        memberAccessBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.MemberAccessCommon member_access = 5;</code>
     */
    public Builder mergeMemberAccess(MemberAccessCommon value) {
      if (memberAccessBuilder_ == null) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            memberAccess_ != MemberAccessCommon.getDefaultInstance()) {
          memberAccess_ =
            MemberAccessCommon.newBuilder(memberAccess_).mergeFrom(value).buildPartial();
        } else {
          memberAccess_ = value;
        }
        onChanged();
      } else {
        memberAccessBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.MemberAccessCommon member_access = 5;</code>
     */
    public Builder clearMemberAccess() {
      if (memberAccessBuilder_ == null) {
        memberAccess_ = MemberAccessCommon.getDefaultInstance();
        onChanged();
      } else {
        memberAccessBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.MemberAccessCommon member_access = 5;</code>
     */
    public MemberAccessCommon.Builder getMemberAccessBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getMemberAccessFieldBuilder().getBuilder();
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.MemberAccessCommon member_access = 5;</code>
     */
    public MemberAccessCommonOrBuilder getMemberAccessOrBuilder() {
      if (memberAccessBuilder_ != null) {
        return memberAccessBuilder_.getMessageOrBuilder();
      } else {
        return memberAccess_;
      }
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.MemberAccessCommon member_access = 5;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        MemberAccessCommon, MemberAccessCommon.Builder, MemberAccessCommonOrBuilder>
        getMemberAccessFieldBuilder() {
      if (memberAccessBuilder_ == null) {
        memberAccessBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            MemberAccessCommon, MemberAccessCommon.Builder, MemberAccessCommonOrBuilder>(
                getMemberAccess(),
                getParentForChildren(),
                isClean());
        memberAccess_ = null;
      }
      return memberAccessBuilder_;
    }

    private long symbol_ ;
    /**
     * <code>required int64 symbol = 6;</code>
     */
    public boolean hasSymbol() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int64 symbol = 6;</code>
     */
    public long getSymbol() {
      return symbol_;
    }
    /**
     * <code>required int64 symbol = 6;</code>
     */
    public Builder setSymbol(long value) {
      bitField0_ |= 0x00000020;
      symbol_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int64 symbol = 6;</code>
     */
    public Builder clearSymbol() {
      bitField0_ = (bitField0_ & ~0x00000020);
      symbol_ = 0L;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference)
  }

  static {
    defaultInstance = new IrPropertyReference(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference)
}
