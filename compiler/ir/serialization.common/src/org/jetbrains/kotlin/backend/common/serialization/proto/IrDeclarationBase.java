// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: compiler/ir/serialization.common/src/KotlinIr.debug.proto

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase}
 */
public final class IrDeclarationBase extends
    org.jetbrains.kotlin.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase)
    IrDeclarationBaseOrBuilder {
  // Use IrDeclarationBase.newBuilder() to construct.
  private IrDeclarationBase(org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private IrDeclarationBase(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final IrDeclarationBase defaultInstance;
  public static IrDeclarationBase getDefaultInstance() {
    return defaultInstance;
  }

  public IrDeclarationBase getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final org.jetbrains.kotlin.protobuf.UnknownFieldSet unknownFields;
  @java.lang.Override
  public final org.jetbrains.kotlin.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private IrDeclarationBase(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    org.jetbrains.kotlin.protobuf.UnknownFieldSet.Builder unknownFields =
        org.jetbrains.kotlin.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            symbol_ = input.readInt64();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            originName_ = input.readInt32();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            coordinates_ = input.readInt64();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            flags_ = input.readInt64();
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              annotation_ = new java.util.ArrayList<org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall>();
              mutable_bitField0_ |= 0x00000010;
            }
            annotation_.add(input.readMessage(org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall.PARSER, extensionRegistry));
            break;
          }
        }
      }
    } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        annotation_ = java.util.Collections.unmodifiableList(annotation_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrDeclarationBase_descriptor;
  }

  protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrDeclarationBase_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.class, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.Builder.class);
  }

  public static org.jetbrains.kotlin.protobuf.Parser<IrDeclarationBase> PARSER =
      new org.jetbrains.kotlin.protobuf.AbstractParser<IrDeclarationBase>() {
    public IrDeclarationBase parsePartialFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return new IrDeclarationBase(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public org.jetbrains.kotlin.protobuf.Parser<IrDeclarationBase> getParserForType() {
    return PARSER;
  }

  private int bitField0_;
  public static final int SYMBOL_FIELD_NUMBER = 1;
  private long symbol_;
  /**
   * <code>required int64 symbol = 1;</code>
   */
  public boolean hasSymbol() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required int64 symbol = 1;</code>
   */
  public long getSymbol() {
    return symbol_;
  }

  public static final int ORIGIN_NAME_FIELD_NUMBER = 2;
  private int originName_;
  /**
   * <code>required int32 origin_name = 2;</code>
   */
  public boolean hasOriginName() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>required int32 origin_name = 2;</code>
   */
  public int getOriginName() {
    return originName_;
  }

  public static final int COORDINATES_FIELD_NUMBER = 3;
  private long coordinates_;
  /**
   * <code>required int64 coordinates = 3;</code>
   */
  public boolean hasCoordinates() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>required int64 coordinates = 3;</code>
   */
  public long getCoordinates() {
    return coordinates_;
  }

  public static final int FLAGS_FIELD_NUMBER = 4;
  private long flags_;
  /**
   * <code>optional int64 flags = 4 [default = 0];</code>
   */
  public boolean hasFlags() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>optional int64 flags = 4 [default = 0];</code>
   */
  public long getFlags() {
    return flags_;
  }

  public static final int ANNOTATION_FIELD_NUMBER = 5;
  private java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall> annotation_;
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
   */
  public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall> getAnnotationList() {
    return annotation_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
   */
  public java.util.List<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCallOrBuilder> 
      getAnnotationOrBuilderList() {
    return annotation_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
   */
  public int getAnnotationCount() {
    return annotation_.size();
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall getAnnotation(int index) {
    return annotation_.get(index);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCallOrBuilder getAnnotationOrBuilder(
      int index) {
    return annotation_.get(index);
  }

  private void initFields() {
    symbol_ = 0L;
    originName_ = 0;
    coordinates_ = 0L;
    flags_ = 0L;
    annotation_ = java.util.Collections.emptyList();
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasSymbol()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasOriginName()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasCoordinates()) {
      memoizedIsInitialized = 0;
      return false;
    }
    for (int i = 0; i < getAnnotationCount(); i++) {
      if (!getAnnotation(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt64(1, symbol_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(2, originName_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt64(3, coordinates_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt64(4, flags_);
    }
    for (int i = 0; i < annotation_.size(); i++) {
      output.writeMessage(5, annotation_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt64Size(1, symbol_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt32Size(2, originName_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt64Size(3, coordinates_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt64Size(4, flags_);
    }
    for (int i = 0; i < annotation_.size(); i++) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(5, annotation_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  protected java.lang.Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @java.lang.Override
  protected Builder newBuilderForType(
      org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase)
      org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBaseOrBuilder {
    public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrDeclarationBase_descriptor;
    }

    protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrDeclarationBase_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.class, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.Builder.class);
    }

    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getAnnotationFieldBuilder();
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      symbol_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000001);
      originName_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      coordinates_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000004);
      flags_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000008);
      if (annotationBuilder_ == null) {
        annotation_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
      } else {
        annotationBuilder_.clear();
      }
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrDeclarationBase_descriptor;
    }

    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase getDefaultInstanceForType() {
      return org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance();
    }

    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase build() {
      org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase buildPartial() {
      org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase result = new org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.symbol_ = symbol_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.originName_ = originName_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.coordinates_ = coordinates_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.flags_ = flags_;
      if (annotationBuilder_ == null) {
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          annotation_ = java.util.Collections.unmodifiableList(annotation_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.annotation_ = annotation_;
      } else {
        result.annotation_ = annotationBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(org.jetbrains.kotlin.protobuf.Message other) {
      if (other instanceof org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase) {
        return mergeFrom((org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase other) {
      if (other == org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance()) return this;
      if (other.hasSymbol()) {
        setSymbol(other.getSymbol());
      }
      if (other.hasOriginName()) {
        setOriginName(other.getOriginName());
      }
      if (other.hasCoordinates()) {
        setCoordinates(other.getCoordinates());
      }
      if (other.hasFlags()) {
        setFlags(other.getFlags());
      }
      if (annotationBuilder_ == null) {
        if (!other.annotation_.isEmpty()) {
          if (annotation_.isEmpty()) {
            annotation_ = other.annotation_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureAnnotationIsMutable();
            annotation_.addAll(other.annotation_);
          }
          onChanged();
        }
      } else {
        if (!other.annotation_.isEmpty()) {
          if (annotationBuilder_.isEmpty()) {
            annotationBuilder_.dispose();
            annotationBuilder_ = null;
            annotation_ = other.annotation_;
            bitField0_ = (bitField0_ & ~0x00000010);
            annotationBuilder_ = 
              org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getAnnotationFieldBuilder() : null;
          } else {
            annotationBuilder_.addAllMessages(other.annotation_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      if (!hasSymbol()) {
        
        return false;
      }
      if (!hasOriginName()) {
        
        return false;
      }
      if (!hasCoordinates()) {
        
        return false;
      }
      for (int i = 0; i < getAnnotationCount(); i++) {
        if (!getAnnotation(i).isInitialized()) {
          
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long symbol_ ;
    /**
     * <code>required int64 symbol = 1;</code>
     */
    public boolean hasSymbol() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 symbol = 1;</code>
     */
    public long getSymbol() {
      return symbol_;
    }
    /**
     * <code>required int64 symbol = 1;</code>
     */
    public Builder setSymbol(long value) {
      bitField0_ |= 0x00000001;
      symbol_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int64 symbol = 1;</code>
     */
    public Builder clearSymbol() {
      bitField0_ = (bitField0_ & ~0x00000001);
      symbol_ = 0L;
      onChanged();
      return this;
    }

    private int originName_ ;
    /**
     * <code>required int32 origin_name = 2;</code>
     */
    public boolean hasOriginName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 origin_name = 2;</code>
     */
    public int getOriginName() {
      return originName_;
    }
    /**
     * <code>required int32 origin_name = 2;</code>
     */
    public Builder setOriginName(int value) {
      bitField0_ |= 0x00000002;
      originName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 origin_name = 2;</code>
     */
    public Builder clearOriginName() {
      bitField0_ = (bitField0_ & ~0x00000002);
      originName_ = 0;
      onChanged();
      return this;
    }

    private long coordinates_ ;
    /**
     * <code>required int64 coordinates = 3;</code>
     */
    public boolean hasCoordinates() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 coordinates = 3;</code>
     */
    public long getCoordinates() {
      return coordinates_;
    }
    /**
     * <code>required int64 coordinates = 3;</code>
     */
    public Builder setCoordinates(long value) {
      bitField0_ |= 0x00000004;
      coordinates_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int64 coordinates = 3;</code>
     */
    public Builder clearCoordinates() {
      bitField0_ = (bitField0_ & ~0x00000004);
      coordinates_ = 0L;
      onChanged();
      return this;
    }

    private long flags_ ;
    /**
     * <code>optional int64 flags = 4 [default = 0];</code>
     */
    public boolean hasFlags() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 flags = 4 [default = 0];</code>
     */
    public long getFlags() {
      return flags_;
    }
    /**
     * <code>optional int64 flags = 4 [default = 0];</code>
     */
    public Builder setFlags(long value) {
      bitField0_ |= 0x00000008;
      flags_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 flags = 4 [default = 0];</code>
     */
    public Builder clearFlags() {
      bitField0_ = (bitField0_ & ~0x00000008);
      flags_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall> annotation_ =
      java.util.Collections.emptyList();
    private void ensureAnnotationIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        annotation_ = new java.util.ArrayList<org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall>(annotation_);
        bitField0_ |= 0x00000010;
       }
    }

    private org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall, org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCallOrBuilder> annotationBuilder_;

    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
     */
    public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall> getAnnotationList() {
      if (annotationBuilder_ == null) {
        return java.util.Collections.unmodifiableList(annotation_);
      } else {
        return annotationBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
     */
    public int getAnnotationCount() {
      if (annotationBuilder_ == null) {
        return annotation_.size();
      } else {
        return annotationBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall getAnnotation(int index) {
      if (annotationBuilder_ == null) {
        return annotation_.get(index);
      } else {
        return annotationBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
     */
    public Builder setAnnotation(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall value) {
      if (annotationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAnnotationIsMutable();
        annotation_.set(index, value);
        onChanged();
      } else {
        annotationBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
     */
    public Builder setAnnotation(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall.Builder builderForValue) {
      if (annotationBuilder_ == null) {
        ensureAnnotationIsMutable();
        annotation_.set(index, builderForValue.build());
        onChanged();
      } else {
        annotationBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
     */
    public Builder addAnnotation(org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall value) {
      if (annotationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAnnotationIsMutable();
        annotation_.add(value);
        onChanged();
      } else {
        annotationBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
     */
    public Builder addAnnotation(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall value) {
      if (annotationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAnnotationIsMutable();
        annotation_.add(index, value);
        onChanged();
      } else {
        annotationBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
     */
    public Builder addAnnotation(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall.Builder builderForValue) {
      if (annotationBuilder_ == null) {
        ensureAnnotationIsMutable();
        annotation_.add(builderForValue.build());
        onChanged();
      } else {
        annotationBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
     */
    public Builder addAnnotation(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall.Builder builderForValue) {
      if (annotationBuilder_ == null) {
        ensureAnnotationIsMutable();
        annotation_.add(index, builderForValue.build());
        onChanged();
      } else {
        annotationBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
     */
    public Builder addAllAnnotation(
        java.lang.Iterable<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall> values) {
      if (annotationBuilder_ == null) {
        ensureAnnotationIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, annotation_);
        onChanged();
      } else {
        annotationBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
     */
    public Builder clearAnnotation() {
      if (annotationBuilder_ == null) {
        annotation_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        annotationBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
     */
    public Builder removeAnnotation(int index) {
      if (annotationBuilder_ == null) {
        ensureAnnotationIsMutable();
        annotation_.remove(index);
        onChanged();
      } else {
        annotationBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall.Builder getAnnotationBuilder(
        int index) {
      return getAnnotationFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCallOrBuilder getAnnotationOrBuilder(
        int index) {
      if (annotationBuilder_ == null) {
        return annotation_.get(index);  } else {
        return annotationBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
     */
    public java.util.List<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCallOrBuilder> 
         getAnnotationOrBuilderList() {
      if (annotationBuilder_ != null) {
        return annotationBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(annotation_);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall.Builder addAnnotationBuilder() {
      return getAnnotationFieldBuilder().addBuilder(
          org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall.getDefaultInstance());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall.Builder addAnnotationBuilder(
        int index) {
      return getAnnotationFieldBuilder().addBuilder(
          index, org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall.getDefaultInstance());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 5;</code>
     */
    public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall.Builder> 
         getAnnotationBuilderList() {
      return getAnnotationFieldBuilder().getBuilderList();
    }
    private org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall, org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCallOrBuilder> 
        getAnnotationFieldBuilder() {
      if (annotationBuilder_ == null) {
        annotationBuilder_ = new org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
            org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall, org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCallOrBuilder>(
                annotation_,
                ((bitField0_ & 0x00000010) == 0x00000010),
                getParentForChildren(),
                isClean());
        annotation_ = null;
      }
      return annotationBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase)
  }

  static {
    defaultInstance = new IrDeclarationBase(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase)
}
